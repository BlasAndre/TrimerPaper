(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    335288,       6688]
NotebookOptionsPosition[    332717,       6601]
NotebookOutlinePosition[    333053,       6616]
CellTagsIndexPosition[    333010,       6613]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Gell - Mann Matrix representation of SU (3)", "Subsection",
 CellChangeTimes->{{3.6470756642225437`*^9, 3.647075676023542*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]8", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}], "/", 
    RowBox[{"Sqrt", "[", "3", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6470754092733517`*^9, 3.647075483719439*^9}, {
  3.647075527283991*^9, 3.647075643497307*^9}, {3.647279981459734*^9, 
  3.64727998165913*^9}, {3.6472890210828457`*^9, 3.647289021236964*^9}, {
  3.6490972066612015`*^9, 3.649097218662424*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["F - spin representation of SU (3)", "Subsection",
 CellChangeTimes->{{3.6470759172756777`*^9, 3.6470759251173973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1", "=", " ", 
   RowBox[{"\[Lambda]1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", " ", 
   RowBox[{"\[Lambda]2", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F3", "=", " ", 
   RowBox[{"\[Lambda]3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F4", "=", " ", 
   RowBox[{"\[Lambda]4", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F5", "=", " ", 
   RowBox[{"\[Lambda]5", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F6", "=", " ", 
   RowBox[{"\[Lambda]6", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F7", "=", " ", 
   RowBox[{"\[Lambda]7", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F8", "=", " ", 
   RowBox[{"\[Lambda]8", "/", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.647075870307806*^9, 3.647075914818038*^9}, {
  3.6490972223988314`*^9, 3.6490972263224387`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"2", 
     RowBox[{"F8", " ", "/", " ", 
      RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iplus", "=", 
   RowBox[{"F1", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iminus", "=", 
   RowBox[{"F1", "-", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I0", "=", "F3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vplus", "=", 
   RowBox[{"F4", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vminus", "=", 
   RowBox[{"F4", "-", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V0", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Vplus", ".", "Vminus"}], "-", 
       RowBox[{"Vminus", ".", "Vplus"}]}], ")"}], "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uplus", "=", 
   RowBox[{"F6", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uminus", "=", 
   RowBox[{"F6", "-", " ", 
    RowBox[{"\[ImaginaryI]", " ", "F7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U0", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Uplus", ".", "Uminus"}], "-", 
      RowBox[{"Uminus", ".", "Uplus"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.647075929443054*^9, 3.647076074033596*^9}, {
  3.647076150594205*^9, 3.647076152434465*^9}, {3.6490972346146574`*^9, 
  3.649097251667492*^9}, {3.663690975389215*^9, 3.663690982492985*^9}}],

Cell[CellGroupData[{

Cell["\<\
Here we define a function which can calulate the matrix governing the system \
of differential equations\
\>", "Subsubsection",
 CellChangeTimes->{{3.64780606474791*^9, 3.64780611733595*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetHamiltonian", "[", "list_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", "=", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"w", "=", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"list", ",", "iterator2", ",", "1"}], "]"}], ",", "z"}], 
           "]"}], "*", 
          RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"w", "=", 
           RowBox[{"w", ".", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"MatrixExp", "[", " ", 
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{"list", ",", "iterator1", ",", "1"}], "]"}], "*", 
               RowBox[{"Part", "[", 
                RowBox[{"list", ",", "iterator1", ",", "2"}], "]"}]}], "]"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"iterator1", ",", 
            RowBox[{"iterator2", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"w", "=", " ", 
         RowBox[{"w", ".", 
          RowBox[{"Part", "[", 
           RowBox[{"list", ",", "iterator2", ",", "2"}], "]"}]}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"w", "=", 
           RowBox[{"w", ".", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"MatrixExp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Part", "[", 
                 RowBox[{"list", ",", 
                  RowBox[{"iterator2", "-", "iterator1"}], ",", "1"}], 
                 "]"}]}], "*", 
               RowBox[{"Part", "[", 
                RowBox[{"list", ",", 
                 RowBox[{"iterator2", "-", "iterator1"}], ",", "2"}], "]"}]}],
               "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"iterator1", ",", 
            RowBox[{"iterator2", "-", "1"}]}], "}"}]}], "]"}], ";", 
        RowBox[{"s", "=", 
         RowBox[{"s", "+", "w"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"iterator2", ",", 
         RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Return", "[", "s", "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetPropagator", "[", "list_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", "=", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"w", "=", 
        RowBox[{"w", ".", 
         RowBox[{"MatrixExp", "[", " ", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"list", ",", "iterator", ",", "1"}], "]"}], "*", 
           RowBox[{"Part", "[", 
            RowBox[{"list", ",", "iterator", ",", "2"}], "]"}]}], "]"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"iterator", ",", 
         RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "w", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.647805706610404*^9, 3.6478057084661417`*^9}, {
   3.647805750782425*^9, 3.6478057673402967`*^9}, {3.647805842400662*^9, 
   3.647805845255072*^9}, {3.647806014472492*^9, 3.647806032807712*^9}, {
   3.6489913157235823`*^9, 3.648991347776497*^9}, {3.6489914025539913`*^9, 
   3.648991486213199*^9}, {3.648991524242751*^9, 3.6489915365263357`*^9}, {
   3.6489915766989193`*^9, 3.6489915770426807`*^9}, 3.648991747876754*^9, {
   3.649008116098916*^9, 3.64900812752816*^9}, {3.649008566487027*^9, 
   3.6490085680341516`*^9}, {3.649008630266039*^9, 3.64900866109589*^9}, {
   3.6490189494900017`*^9, 3.6490189639840665`*^9}, 3.649019008049267*^9, {
   3.6490201842510242`*^9, 3.649020189434928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", " ", "=", 
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Iota]p", "[", "z", "]"}]}], ",", "Iplus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Mu]p", "[", "z", "]"}]}], ",", "Uplus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"\[Nu]p", "[", "z", "]"}]}], ",", "Vplus"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"\[Iota]0", "[", "z", "]"}]}], ",", "I0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"y0", "[", "z", "]"}]}], ",", "Y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"ey", "[", "z", "]"}]}], ",", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"\[Nu]m", "[", "z", "]"}]}], ",", "Vminus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"\[Mu]m", "[", "z", "]"}]}], ",", "Uminus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", 
        RowBox[{"\[Iota]m", "[", "z", "]"}]}], ",", "Iminus"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"listOfFunctions", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Iota]p", "[", "z", "]"}], ",", " ", 
    RowBox[{"\[Mu]p", "[", "z", "]"}], ",", "  ", 
    RowBox[{"\[Nu]p", "[", "z", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\[Iota]0", "[", "z", "]"}], ",", 
    RowBox[{"y0", "[", "z", "]"}], ",", 
    RowBox[{"ey", "[", "z", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\[Nu]m", "[", "z", "]"}], ",", " ", 
    RowBox[{"\[Mu]m", "[", "z", "]"}], ",", " ", 
    RowBox[{"\[Iota]m", "[", "z", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"listOfDerivatives", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "z"}], "]"}], "&"}], "/@", 
   "listOfFunctions"}]}]}], "Input",
 CellChangeTimes->{{3.649097312833527*^9, 3.649097455328889*^9}, {
  3.6490981581422167`*^9, 3.6490981592664185`*^9}, {3.6490982334962187`*^9, 
  3.64909828534433*^9}, {3.66369101660913*^9, 3.663691049108581*^9}, {
  3.663691396429558*^9, 3.663691401857286*^9}, {3.663692176408494*^9, 
  3.663692180060823*^9}, {3.6636950009587383`*^9, 3.6636950011211863`*^9}, {
  3.6636950832959223`*^9, 3.663695085686954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Iota]p", "[", "z", "]"}], ",", 
   RowBox[{"\[Mu]p", "[", "z", "]"}], ",", 
   RowBox[{"\[Nu]p", "[", "z", "]"}], ",", 
   RowBox[{"\[Iota]0", "[", "z", "]"}], ",", 
   RowBox[{"y0", "[", "z", "]"}], ",", 
   RowBox[{"ey", "[", "z", "]"}], ",", 
   RowBox[{"\[Nu]m", "[", "z", "]"}], ",", 
   RowBox[{"\[Mu]m", "[", "z", "]"}], ",", 
   RowBox[{"\[Iota]m", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6490974267459793`*^9, 3.649097456596492*^9}, 
   3.6490975409766693`*^9, 3.649098159718819*^9, 3.6490982375114264`*^9, {
   3.6490982733237047`*^9, 3.649098285876731*^9}, 3.649098398997989*^9, 
   3.6490991275083785`*^9, 3.649099787861306*^9, 3.6491006894277115`*^9, 
   3.649100882489102*^9, 3.6491588013130293`*^9, 3.6491588398555517`*^9, 
   3.649158936233942*^9, 3.64915899080445*^9, 3.663689794091528*^9, 
   3.6636904550317783`*^9, {3.6636910422978153`*^9, 3.663691049552977*^9}, 
   3.663691693956656*^9, 3.6636921805397863`*^9, {3.663695001744872*^9, 
   3.663695022282906*^9}, {3.663695057432103*^9, 3.663695086490779*^9}, 
   3.682428309039836*^9, 3.682428392300449*^9, 3.682432752483582*^9, 
   3.6824328959358177`*^9, 3.682433110072139*^9, 3.6826510178292093`*^9, 
   3.682651510696969*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Iota]p", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Mu]p", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Nu]p", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Iota]0", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["y0", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["ey", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Nu]m", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Mu]m", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Iota]m", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6490974267459793`*^9, 3.649097456596492*^9}, 
   3.6490975409766693`*^9, 3.649098159718819*^9, 3.6490982375114264`*^9, {
   3.6490982733237047`*^9, 3.649098285876731*^9}, 3.649098398997989*^9, 
   3.6490991275083785`*^9, 3.649099787861306*^9, 3.6491006894277115`*^9, 
   3.649100882489102*^9, 3.6491588013130293`*^9, 3.6491588398555517`*^9, 
   3.649158936233942*^9, 3.64915899080445*^9, 3.663689794091528*^9, 
   3.6636904550317783`*^9, {3.6636910422978153`*^9, 3.663691049552977*^9}, 
   3.663691693956656*^9, 3.6636921805397863`*^9, {3.663695001744872*^9, 
   3.663695022282906*^9}, {3.663695057432103*^9, 3.663695086490779*^9}, 
   3.682428309039836*^9, 3.682428392300449*^9, 3.682432752483582*^9, 
   3.6824328959358177`*^9, 3.682433110072139*^9, 3.6826510178292093`*^9, 
   3.682651510699415*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"res", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"GetHamiltonian", "[", "list", "]"}], "]"}]}], ")"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"\[Omega]0", "[", "z", "]"}], 
       RowBox[{"g01", "[", "z", "]"}], 
       RowBox[{"g02", "[", "z", "]"}]},
      {
       RowBox[{"g01", "[", "z", "]"}], 
       RowBox[{"\[Omega]1", "[", "z", "]"}], 
       RowBox[{"g12", "[", "z", "]"}]},
      {
       RowBox[{"g02", "[", "z", "]"}], 
       RowBox[{"g12", "[", "z", "]"}], 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Omega]0", "[", "z", "]"}]}], "-", 
        RowBox[{"\[Omega]1", "[", "z", "]"}]}]}
     }], "\[NoBreak]", ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", "res", "]"}], "\[Equal]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"\[ImaginaryI]", " ", "H"}], "]"}]}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{"eqs", ",", "listOfDerivatives"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqs1", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"listOfDerivatives", "\[Equal]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"listOfDerivatives", "/.", "sol"}], ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6490975213432283`*^9, 3.649097530595647*^9}, {
   3.6491587628706737`*^9, 3.6491587895161586`*^9}, {3.64915892025091*^9, 
   3.649158927452325*^9}, {3.663689761633357*^9, 3.663689768646305*^9}, {
   3.663689981472437*^9, 3.663690007262928*^9}, {3.66369004007014*^9, 
   3.663690047512074*^9}, {3.663690177008732*^9, 3.663690201504195*^9}, 
   3.6636904931552134`*^9, {3.663691070392774*^9, 3.663691072826887*^9}, {
   3.663691406591403*^9, 3.6636914092411957`*^9}, {3.663692072772956*^9, 
   3.6636920742222347`*^9}, {3.663692609414363*^9, 3.6636926112183743`*^9}, {
   3.6636950057655773`*^9, 3.663695016910411*^9}, 3.6636959971300087`*^9, {
   3.682298004780711*^9, 3.682298052046476*^9}, 3.682428298409519*^9, {
   3.682651883977977*^9, 3.682651900856227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"eqs1", "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.6490975635291815`*^9, 3.649097563842182*^9}, {
   3.6490975987622633`*^9, 3.64909763160533*^9}, {3.6490977615973697`*^9, 
   3.649097773893795*^9}, {3.663690589351864*^9, 3.663690608194046*^9}, 
   3.663691060131781*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]p", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"g01", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Iota]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], 
       "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g12", "(", "z", ")"}], " ", 
           RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
          RowBox[{
           RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"g02", "(", "z", ")"}], " ", 
              RowBox[{"\[Nu]p", "(", "z", ")"}]}], "-", 
             RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
             RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}]}]}], 
     ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Mu]p", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"g01", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
           RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
          RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g12", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Mu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}]}]}], 
     ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Nu]p", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Nu]p", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g01", "(", "z", ")"}], " ", 
           RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"\[Omega]0", "(", "z", ")"}]}], "+", 
             RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g02", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Nu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"g12", "(", "z", ")"}], " ", 
        RowBox[{"\[Iota]p", "(", "z", ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]0", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], "-", 
       RowBox[{
        RowBox[{"g02", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
           RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"g12", "(", "z", ")"}], " ", 
        RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
       RowBox[{"\[Omega]0", "(", "z", ")"}], "-", 
       RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y0", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
             RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g12", "(", "z", ")"}], " ", 
          RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
         RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
         RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ey", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Nu]m", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"g02", "(", "z", ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"y0", "(", "z", ")"}]}], "+", 
            RowBox[{"\[Iota]0", "(", "z", ")"}]}], ")"}]}]]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
        RowBox[{"\[Mu]m", "(", "z", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g01", "(", "z", ")"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Mu]m", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"y0", "(", "z", ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"\[Iota]0", "(", "z", ")"}]}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g12", "(", "z", ")"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]m", "\[Prime]",
        MultilineFunction->None], "(", "z", ")"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g01", "(", "z", ")"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6490975642173843`*^9, {3.649097599275866*^9, 3.6490976320667315`*^9}, {
   3.6490977649125757`*^9, 3.649097774457396*^9}, 3.6490980552669673`*^9, 
   3.6490980996556897`*^9, 3.6490982451712418`*^9, 3.649098305249771*^9, 
   3.649098406192404*^9, 3.649099134713992*^9, 3.649099796096923*^9, 
   3.649100696575925*^9, 3.6491588086040487`*^9, 3.649158847166581*^9, 
   3.649158943501955*^9, 3.649158998092064*^9, 3.6636897732846403`*^9, {
   3.6636898093708677`*^9, 3.6636898147489233`*^9}, 3.663689879569166*^9, {
   3.663689970576395*^9, 3.6636900097410097`*^9}, {3.663690416771968*^9, 
   3.663690441576186*^9}, 3.6636904962703333`*^9, {3.6636905916172028`*^9, 
   3.663690609180653*^9}, 3.663691060811455*^9, 3.6636917769435883`*^9, 
   3.663692076943364*^9, 3.663692183777211*^9, 3.663692621557415*^9, {
   3.663695018891553*^9, 3.663695024660633*^9}, {3.663695060896144*^9, 
   3.663695089584491*^9}, 3.663695717521625*^9, {3.6636959794414253`*^9, 
   3.663695998773014*^9}, 3.6824283218981857`*^9, 3.68242840612916*^9, 
   3.682432765415567*^9, 3.682432908442932*^9, 3.682433122932794*^9, 
   3.68265103491779*^9, 3.682651528179603*^9, 3.682651904120723*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Iota]p", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"g01", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Iota]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g12", "(", "z", ")"}], " ", 
          RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"g02", "(", "z", ")"}], " ", 
             RowBox[{"\[Nu]p", "(", "z", ")"}]}], "-", 
            RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
            RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}]}]}], 
    ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Mu]p", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"g01", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
           RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
          RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
         RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"g12", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Mu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}]}]}], 
    ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Nu]p", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Nu]p", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g01", "(", "z", ")"}], " ", 
          RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Omega]0", "(", "z", ")"}]}], "+", 
            RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"g02", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Nu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"g12", "(", "z", ")"}], " ", 
       RowBox[{"\[Iota]p", "(", "z", ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Iota]0", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"g01", "(", "z", ")"}], " ", 
        RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"g02", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
          RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"g12", "(", "z", ")"}], " ", 
       RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
      RowBox[{"\[Omega]0", "(", "z", ")"}], "-", 
      RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["y0", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      FractionBox["3", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
        RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["ey", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Nu]m", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"g02", "(", "z", ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"y0", "(", "z", ")"}]}], "+", 
           RowBox[{"\[Iota]0", "(", "z", ")"}]}], ")"}]}]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
       RowBox[{"\[Mu]m", "(", "z", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g01", "(", "z", ")"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "(", "z", ")"}], " ", 
          RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Mu]m", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"y0", "(", "z", ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         RowBox[{"\[Iota]0", "(", "z", ")"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g12", "(", "z", ")"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Iota]m", "\[Prime]",
       MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g01", "(", "z", ")"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6490975642173843`*^9, {3.649097599275866*^9, 3.6490976320667315`*^9}, {
   3.6490977649125757`*^9, 3.649097774457396*^9}, 3.6490980552669673`*^9, 
   3.6490980996556897`*^9, 3.6490982451712418`*^9, 3.649098305249771*^9, 
   3.649098406192404*^9, 3.649099134713992*^9, 3.649099796096923*^9, 
   3.649100696575925*^9, 3.6491588086040487`*^9, 3.649158847166581*^9, 
   3.649158943501955*^9, 3.649158998092064*^9, 3.6636897732846403`*^9, {
   3.6636898093708677`*^9, 3.6636898147489233`*^9}, 3.663689879569166*^9, {
   3.663689970576395*^9, 3.6636900097410097`*^9}, {3.663690416771968*^9, 
   3.663690441576186*^9}, 3.6636904962703333`*^9, {3.6636905916172028`*^9, 
   3.663690609180653*^9}, 3.663691060811455*^9, 3.6636917769435883`*^9, 
   3.663692076943364*^9, 3.663692183777211*^9, 3.663692621557415*^9, {
   3.663695018891553*^9, 3.663695024660633*^9}, {3.663695060896144*^9, 
   3.663695089584491*^9}, 3.663695717521625*^9, {3.6636959794414253`*^9, 
   3.663695998773014*^9}, 3.6824283218981857`*^9, 3.68242840612916*^9, 
   3.682432765415567*^9, 3.682432908442932*^9, 3.682433122932794*^9, 
   3.68265103491779*^9, 3.682651528179603*^9, 3.6826519042309723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"eqs1", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "8"}], "}"}]}], "]"}], " ", "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.649103272868735*^9, 3.649103297835382*^9}, {
  3.6491033286058435`*^9, 3.649103354882492*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Iota]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], 
        "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Omega]0", "(", "z", ")"}], "-", 
              RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}]}], 
       "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[Iota]p", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Mu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}], "-", 
           RowBox[{
            RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
           RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ")"}]}]}], 
       "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[Mu]p", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Nu]p", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{
        RowBox[{
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Nu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Nu]p", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g01", "(", "z", ")"}], " ", 
            RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Omega]0", "(", "z", ")"}]}], "+", 
              RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}], ")"}]}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[Omega]1", "(", "z", ")"}], "+", 
        RowBox[{
         SuperscriptBox["\[Iota]0", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{"\[Omega]0", "(", "z", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"3", " ", "\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["y0", "\[Prime]",
           MultilineFunction->None], "(", "z", ")"}]}]}], "\[LongEqual]", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
              RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[Omega]0", "(", "z", ")"}], "+", 
          RowBox[{"\[Omega]1", "(", "z", ")"}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["ey", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
         RowBox[{"\[Mu]m", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"g01", "(", "z", ")"}]}], "+", 
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Nu]m", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"y0", "(", "z", ")"}]}], "+", 
            RowBox[{"\[Iota]0", "(", "z", ")"}]}], ")"}]}]], " ", 
        RowBox[{"g02", "(", "z", ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Mu]m", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"y0", "(", "z", ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
           RowBox[{"\[Iota]0", "(", "z", ")"}]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g12", "(", "z", ")"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.649103293032173*^9, 3.649103298194183*^9}, 
   3.649103355585494*^9, 3.6491588093666525`*^9, 3.6491588479462075`*^9, 
   3.649158944219557*^9, 3.649158998825265*^9, {3.6636898096564207`*^9, 
   3.663689818338114*^9}, 3.6636898812585697`*^9, 3.663696001488955*^9, 
   3.682428323390999*^9, 3.6824284077321377`*^9, 3.682432766887385*^9, 
   3.6824329099002943`*^9, 3.682433124428576*^9, 3.682651039395907*^9, 
   3.6826515296645393`*^9, 3.682651908044039*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ode", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"eqs1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Iota]p", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Iota]0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Iota]m", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Nu]p", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"y0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Nu]m", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Mu]p", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Mu]m", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"ey", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.64909811461932*^9, 3.6490981467169905`*^9}, {
   3.649098321463605*^9, 3.6490983539870834`*^9}, 3.6490984140470247`*^9, {
   3.682432797452673*^9, 3.6824328566024513`*^9}, {3.6824331589968777`*^9, 
   3.6824331653193693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol_numerical", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"ode", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]1", "[", "z", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]2", "[", "z", "]"}], "\[Rule]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"g01", "[", "z", "]"}], "\[Rule]", 
        RowBox[{"1", "+", 
         RowBox[{"0.5", "z"}]}]}], ",", 
       RowBox[{
        RowBox[{"g02", "[", "z", "]"}], "\[Rule]", 
        RowBox[{"1", "+", 
         RowBox[{"0.5", "z"}]}]}], ",", 
       RowBox[{
        RowBox[{"g12", "[", "z", "]"}], "\[Rule]", 
        RowBox[{"1", "+", 
         RowBox[{"0.5", "z"}]}]}]}], "}"}]}], ",", "listOfFunctions", ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6491588165888767`*^9, 3.649158828556714*^9}, {
  3.682428438938389*^9, 3.6824284523900127`*^9}, {3.682433212010333*^9, 
  3.6824332216149693`*^9}, {3.682433445410123*^9, 3.682433447438178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Iota]p", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Mu]p", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Nu]p", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Iota]0", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"y0", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"ey", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Nu]m", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Mu]m", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Iota]m", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "15.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 15.}}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "z", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.649098135955166*^9, 3.6490981725782547`*^9}, {
   3.6490983276928177`*^9, 3.649098355776487*^9}, {3.6490984063328037`*^9, 
   3.6490984161374283`*^9}, 3.649099134932392*^9, 3.649099796237323*^9, 
   3.6491006967475257`*^9, 3.649158809475853*^9, 3.6491588480710077`*^9, 
   3.649158944391157*^9, 3.649158998965665*^9, 3.682428323866846*^9, 
   3.682428408218811*^9, 3.6824327671880293`*^9, 3.682432808251885*^9, {
   3.682432860887938*^9, 3.682432876510404*^9}, 3.68243291020807*^9, 
   3.682433124720409*^9, 3.682433166838788*^9, 3.682433223240307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"\[Iota]p", "[", "z", "]"}], "]"}], ",", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Iota]m", "[", "z", "]"}], "]"}]}], "}"}], "/.", "sol"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682432933509016*^9, 3.682432937839136*^9}, {
  3.6824330406150093`*^9, 3.682433042369874*^9}, {3.682433170182515*^9, 
  3.682433234777089*^9}, {3.682433390737954*^9, 3.682433392578586*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Y/dRBnX/lI6Ecg0TfcU8k+p0GXxgKXiTq2SEZNuFVGllyyBVdE14egeDrEs4
YfT2kwzGVAqujHRhksgxtQphIoM3vHSXGR5nESnNhb1XC2XQ0+iIUZMoRQJu
1JT2FMtgv6K5kAdbb2e/vtljXCaDYVxL7A62UsRVwLUkq1IGQ4uDWEdnKdJr
hvrLa2Ww0HE4d9U/ilg9FSsKqpdB/faTsw1tbN7t6Nr1u0kGP1zIahWPpIju
yo8FNm3sfD2yB7hNKZLq6IOVHez7fkf+OznKIuq2p0qVu2VQQPyT1gNPFsk8
AmY+fTIolPGv69kck+QYzp3UGGXvd4m1EhxikG3YPhjGksH5bzeylx9kkM+a
ny6MjrPz/arhdj1nlOQrX7sZ+UcGywYql8d5jZCqHte8S5KyeM+xfLnw5X5i
0mZqUCMjiwN6FuFfWvpIbZ1a9RqaLI64nYter9tHGvIZHT+VZNGhbEE4TqSX
tEU4zBmqyWJUenKT0rcuMmR9Skdxryz+92Ow9r1yK3E8AEUeRrI4fPhW5YY1
LYSxd4nRd1NZPNc3wV2k1kworfajd61kUc+rOy1yVyOZljl8fdxOFrnjlIdy
7tWRRfWmucXespgfoHTDYbKILNkPWi7psuh6+4U+j34csArOz4VkyWJ0X+5i
V+8kIFrPClNyZVEkf+lCf8dHOKU8bjSeL4vvjNTmny/PhmjOtzaXqmSxTePG
rrJzhaCSzXPfc0AWu26lKh4Nr4GNq6o7/OXkkN9+Ookn+idwvJqJjlOQwz3N
TZEbEjqhTkLFoXSJHM6sWbSY/2gXuHPcmuBfJYefh4Jao526IePHJt7gTXK4
r8e8bFlcL/gfOFGZpC6HmTcfdIds6wOrssAH1ZpyuOKAwf76mj74k9mrIKYr
h8G8C9N+C/2w7eHjjY/2se1DT3soXRgCAf7CqTRjOTyeNCXAYvPVj5us3AYz
OUxW3aCYmzAMXs579GUOyaH7Bp078n0jYNR3UUDTWg7PlTYQA+9RUDwaWXPo
uByKAV/UG2kG5Bn+PfLcTg57BCeOWGoyIYSsWpp7Rg6j7qLgRB4TTmoc6Gs7
J4eukTttVuuyYGOS97t/TnLIIcKlNJbKAo6V713ornLo9OJ7yDiNgroXzVt2
XGT7j/AZ87hIQbT44r/Hr8jhyeM568/n/P/7rY153tfkcNL18cc9wxToLRy7
/cZLDn9o9+nLs/UyMpA2vOiWHN7/c9RsyyQFs9ItJg632fdjL5toTCg4EvU4
vdJfDtvOB+SlHKEgc91B2qZAORzJXdeq+ZkFEtlitx4Hy+HvmTPxDzqZcEGv
uv9vmBzu1RGI8/vMgMrq+/tPhMthCGu+9aTRKKy23vux8CnbX0rTC997w+DX
zyOr8lIOt921Cvx3YRC6XYu87kfIYfue4Z1a832gO+vTQ0XJ4fvoIYWMrT3w
4i4YWvwnhww9UQkRzZ8wLTGXlB0vh/Wp/IwLbs1wMCJXUjFRDtVjLScfqteC
UMbWzv5UOezNd/v7duA+OOCv3fsy5XBReP7q+ehPpLjiQ0JyjhxywpLoCdkq
svyQi5jkF/b+bKeMZz2NxLtn7RWPfDlcPJPmGl3WTtqch3/8+CqHX14/XHTp
YTfR/Bu7E7/JYUzOHnku1z4S7mcfF1Muh/4GmSpGvwfImOhyYf5qOdzPd+Bb
36phYvSy0925Tg77dqbZP58dIe+UX7fUNcjhxL2h87XeDMKTaq2r0SKHO/Y/
Lf7+kUlsd8jFvPghh44LkcnKr1gkr7SRf+GnHGrWOPyZ200RBYtHF+x65HCN
5APlgjSKXO00a/zWL4eGr8lYFkWRBkeR7euG5fCDUVJ65QJFNk5XRIYx5DAy
+ED36RGKBPvc45mi5DDv2coFsww2nwrtcTrySw4zTj2S+3yaIgbPFn//Mi2H
z5RCzmtwUCR6RaHm8hk53LVnICo7gEUWkm++9p9j5/t+o9UHLhbJLp5xMF0s
j9E/Vj40aWIQKfPs6jReefRQjcsOU2cQt/bL6nKC8nja2Zf2IniUqP4aW+gS
l0dW3ucHqVtHyCulwSfuS+VR36emKufaIPnzPma2abk8vtW3PCRXOUAsNW1t
tyvL49Eo26M/lw4QEZOO9YvXy6OzhypnUmUfuXW9vujxNnlUOmf99BX0EPsm
MpFtKY/7b8tyRaz8QcS6yx/3HpZHE6/rkdNL2sin0UYtkWPy2PnsU9c7eiuR
4GR429nKY+qngL8xy5oJWSsnKHJBHmfPD+RcNKknNB/XFXYB8lhUm1XbrFZK
6tYusxD+JI8v3rRaC7Y9AS+Ndb818+SxsUtH+wo9Glbv1HxhWyCPhldFn/dX
x4O3lXFX1jd2/lpS9FVKabDO55qTbYM8chafbwk7mg8BTXV+WUx5/Opqt5fT
vRrUu9tVesbkMXn9XpOi5bXQOTpYLjQpj2v0M2zrROpAg3NezHaGHS8R0DRn
fYfetaqvhXhpKLxncM3n6ibQ9fHNsFGioQjN44CSeif81nll47WChqEeVkH3
lLvgw58M4afKNKxYZlQgn9EFK1yHT1euo2HQ8w9bI1u6ge+kmYymNg2PWAsK
3NTug0KaY6G5Dg2d7oXLjzf1wfWm2y5OwF5n6YYevNIPLOOskih9Gj7ZccLa
OncA6nWWeAgdoKHkzL6vV8yGIeiP5goVSxp2W8urRk4Pg0G6ec3OwzQ8/Dmj
puPlCGSvvaPicYKGn6/ymyh3jYL7YET9AxsaOq9YWsR7gwFr32bfTLSn4Vbh
dt5XUkzoO/F97bezNJxf0d+u+R8TImiM5m5HGiY9V4noWceCQ03cfrPONKyf
0zpl9I4FYg+XbpR1o+HCXj3tQlkKyo212zddouHfjsQPSpcpuM1/MMDIg4am
r4yw/AsFOsVO6mc9aVhXlnrwNZPNl7f8u3xu0PCQ94HXTLZ+puhEBr26RUP1
rK/m//9+1uFPjlbWbRrqdOQ+fplJwbL0+r46fxpGhQb+t8iUgrYLzDDGPRrq
6pyLWMvW8/C1vDt4g2n4/Ipl3LFWJhgPKg0vC2PfZ896i7kvDOB5u+2xziMa
xuM7V+rIKOSfsNh56AkNXyhPXOeJH4ZrNBem23MaCmrSXB/EDMLmprvPg17R
MHFy8Pu4cT8wHkTpx71hr0+NL9n0Xw/8Z/xpvCCahi9zmEq8xzvhBH/j6/b/
aMgZ/7BvbW8LyBWz9v6Op6FM/FSkwa86qLvFNy2eSMM4Z87mbItiCNRZHr0u
hYY3ZJ6tpizfwVya5YxNBg15bNeWMPO/kcwLF2K9smmot8cxIWFpPXFde+/A
0080XNl+508YZxtZMxg9/zGPfX8C/3K71btIT/TnhMoCGhaYSr7euayXvDrR
ZDVYREOH3Ccer/L6iSVtjIurlIa0D9EFdP4hItLEn0KvYO8XC1ksyjFCSh+s
OKpZTUPXS1d6jv03SnyMd/AeqKMhxZsU+muWzWP8h9KcGmi4i/9DyQYhFpks
cj15t5kdv1jXlHkriyTdChSMbqPhRLDBRYHzFDmjE5P1uYOGRtWiDYqlFFH6
88WuuYuGaZw4rvSbIq1pzaITvTT0OH0xbR97nn94YfyT0CC73pE1CVa9FGmG
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
J5lodGyKBZ8cRBTW5n/BUzmK1mV/WRD2JLpj7F49FhZb4H1bgA1tbyWkFmyt
xWqvej9IL2TD4oMJq3PDy7Hn70hTJVU2VHRk+CeovMLecZI21zXYIN55sjR1
9jm+uuOm24AmGzyUr18JT3+Cw6K8Ql5sZAPELUpwe3AE52zZ06RlyIZy62qF
/TLpiO/W3GMGR9hQZ/x6UpNVjoTXep9JPMoGpDU/b7n5ZyTVOnZD2IkNORZv
b/Pdq0S0RkdypSsbzgWWr3suVosM63JGLbzZcGGlhe6Bsga0+6KmQLYvG9yt
HttN8H1DVkpJ0vL+bDAJX9QXjBrRiTOh678HsOGdkP3hrxXN6I68m7dDOBt+
EvEtwPiHsKK+Ox8j2WBoWNfr97kDRbscilkZzQZHD+Vc0r8TpeebFHKfssEs
aDb8+XQX+mKnPP9sBhsGdRuPHFzch9oWPF7SlMUGT6y0dENvH+p7LaWq+44N
81zP/lPN6keT8/h2zWI2rEzL48VaDSK+9DM2R4rYIJ3sN7R65RCab81xKypl
gzU9LfH99xCST2kOuVHJhsru6Zip2yPIoz66K62GDQrlmvdFN3FQ+V87zcZ6
NoSUzojndHMQobTcj+8bG7ZuON4S4c1F53YOV61oZoNMmHfRHUFGH0+nKZq1
sWG1epL0K08eWhHl6XK+g/n+qrfoujIe8ivZkPukm4n/rr/enkke+sb5K/yp
jw0a2ssyV03zkMaiAquxQTboiWYRkxU8dH3z1UR5DhtmExZaNNrw0HcH44mt
o2ywMnhWvz2Zi9bfFTVw/smGN1a9j0884aCgtzUhIRNsSGNHK0TrjKDe9gdd
ub/ZIKFHKR1zGUJ68601e6bZ0BFPJJ1eNYBMIsRhHh8BrQ/1l8749qIzL9wc
I/kJOG4uq/3vcBeKK6gL0hAkIGpeql7eszZU9UXrTeEcAiK+GJq7NjSgPwNh
bf/NI+Bm/kTnaM8ntOzf1JxhIQJcCxUM1pRloL2SB9R8hQnIipiI/1uYjp9r
sy8mihJgrzSyK9iuAX8xvRynK07ANuHTfmHQhvnsusurJQhIkzr8w3ZtF1Y7
Y/DDXpIAHz/hNrODvdjqVqLclBQBHvrrox5JD+Cr0cIQKEPA2PNv3I+WQzg9
w9mRWESARqn9JzO1EdxaWhn0ejEBfYFucrsiOHh+y6o3xksIEDLxLlyewMVa
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
sK7h1vf7sv34fxSdhqs=
     "]], LineBox[CompressedData["
1:eJwUV3c81t8Xt/d4PMhIUomSIilNn2uviIyQrJBNIqOUKDMjIy2yR1lZ4SvH
yiayR/bee/P8nt9fn9d9nXvPeZ/3OZ97z/uEqcNdczISEpIEWhKS/39jXphS
XTQLkiQhabn83VbiV6z+/PV7fFbYzPc/vP1N7WW9qoFOfHzu2JOzd6O+N62V
iUn8SaTr8caGRfTrw1SpwFVBj4mSLwC7+kjd51cfK5TeG3MjPArFvF99tXuA
Pw6k+YUr+93h2NNNzXd+lgLAX7onsLsXhdVH/9fKE3wB5KuRwdbxj1hh+u4J
jf1LYNn05t26zBesR9Zg5rHONQjqaKhZefQVKzPY753VxuDeIvWLLbl4TL/s
607/gTRYOn3j3OxOwEg55T5ZJ8mD++btvHWrJEychd71+FdlCPRYUl3bS8bq
CQ8KXi6qQaa3uM/y8XRsVe7HbJm8FpRRdR9b+vENi6hKkDy2pAOtge5FCzIZ
2OzttvmlSj1YDS9bmH2UjRmHo72zi0bgHSRavf48B3tzgbDPlWgCgc2vWNbl
fmD7Zp9D3c0fwhcN/ozV7lyMUuTt5uL5R5AU4bKzEpeHvT/D885Q3AoyO2vk
V6zyscSXfSa9GjZQpmc1srRXgP3pcbdO++sAIyZZRxaOF2M+OMaBgG1nmE0k
PJyfLsZuN1MXftZ/CqsT6j/mfpRgqJSbcFDnChTWayqzMqXY+4J/ticaPUDA
6eqrqUeAFa0esPDlewFnn+yjJ5zl2Obt6F26D6+A59kC49rzcqzBhnD8g7c3
8P+SvL8qV4HNmvigIZvXcEVqZGO5uxJ7YvW6mu+dP1wfDfjieLMKi+qtKTqS
EQCSPmIyy3FVWMditK90SyAo/PYJW7KqxtJN//G8OxMMukoC5xb3fmOFLXY6
OUffgcFsS5udcQ3mEepqIlL7DkyCXN0Wqmsw+3gpmoSn4WDdXPd7PrgWcxPZ
o4gciYBnGjbGc8frMfqFZRK6mfdw6HOFa+htPTaf8JlxqSYavApJ//7dqceo
X67mbKZ/gNdHP8iUtDdgV+1Qz8+XnyBkologwK8J2w9Ja+CyjQUcZ9jQ8/Um
rIf76n+iLl8hXPn+B0eTZiwgo0+ISjoOorNXaHVvtGAFtAwe+XrxEOfOuyCw
9Adz5yueTspMBJau9buMF1oxM0an6kDlJLjroC/iZ9aK1RaRkRXMJkFn/Olp
j7ZWbOvS/gHd5RTooyrVM/3ehkmTPyHorKXBWOv0zYtG7djzJtMzD/mzgd9a
jet7VDtmW9jTWL2fDRbk+Rv8Te3YYuhlg2LbHJi+/DKL81oH5iv0bohM/QfM
f2LnI2HtxC4LchXeEsuD8+LP9t2VOrGjwxd7W3PywL55uGftZSfmwXOUZexi
PqwQvr+bmu/ELEzTSUpuFMCmmTT5n5ourE3xLlWmw0+QOEwdUjzowqSrvnHn
kheBWzRjaeWlbozNPCA96VMR7NX3OBfGdWP3NcxbI9qKgUTEYTLGowcrHJaO
NjcvBdqdz/W2F/owmPas0uSugKt+vR7KJn0YnZZs/VH3CrBk5xA+E9mHSU1t
v87urYCai+EhYzt9WGOlNpjEVcJra39N/d/9WEHGqaO0ctWQv/2b4up2P6b4
W1pZOa8axnzJC9nPDWBZmWPqGad+g3TiC862sAGsb5zNiYy+BkgGnP8pGPzD
vNl0FDU3akHUOjfkdOg/zNE1U27HpQ6Mtpcw8sp/GEujXO2ZnTooY7NJKBMc
xBQKuDQfUDfAM1WTR5fXBjG1D7O3/sk2wbOhFDcWuWGsNSgEy0lvhfAUOQ0v
w2HMcZ3pxi2yNvhmN352yXUYq/V78TrOoA369k70N30bxi5nzpBxcvyFq5wx
t/xxI9gtqn5jtqR2UB+6cWTr7AjWKSWZHMfQAZYpfYvmMiOYX2GSkYVrB0SL
c8bJPB3BVoXELnZqdsKmegQZoX8Ei2xX9xw72w1MnGL9dhsjWPrC77rO5G4Q
GGrNG2AaxXpa20ef8feAth2TeYnUKCbpaflHUKgX8gMCal1SR7HW+PMby7r9
0KR+Jm68fBTTOaXW92S+H8Y4at00+0axjDe1Ebd8BgCfQiF0kXEM663Tl9gp
+QePK1++nXcaw46jZO08oWHYZonM7A8aw77vTwjuew3DC5O0loakMaxNXW/7
XO8wvCVpw6V3jWEynidybUNHIE3yZJT59XHs35Nlo1y2MRAJuVKopTmOmZk5
azk+G4PCf8rdMrbjmGzuc+nH42NQ/fwJ18nYcYztpbWVza9xGC6pjhkkncAI
IhxPg95OwiO63rJm7gmM4a013XeqKVjUWxgqvTSB3b6++8naZwr2t9lPfjaf
wJb8psI3Xk8Dp8SjlHv1E5jZ5SfHNdJnQT2PNrs1bBLzvCfi+stzCbrJeFsh
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
/xPrb6RILuE9HgdNiXgS+Fx7Rtt2bBF/njrd6JtIAhWb168lFRdQx595ZvYt
Cbp5aU4+UvN4nFmsVptFgmu/E2T0ymcwz8C3Zm8eRx+R9570uU2jdKKOakwh
CeIqG09GKU0hQX75lG0ZCcR4LnnafeX0qw51H/rek+BmfljvTU7/tFAeoXT6
I0d/QlNeFj7j2K8BxzfUk+DRry2NL36M4fkXQhXeTRy9PiinZk6OYnVXj+J0
C+f84msamTWCGabO8LmLBL1+GeLbSwdxl/61D5K9JJj2NpY/CT8w56KChvMA
Cf7eoMG3lgHce4b1tWOQBPpf3d+1uvRj/slF3T0jJPD2JPCuPNGH+6Fz0H+M
BMEP84/tZvRikXyhxcg4CWTnKw/sXdmDJZL3H0bOkEBt972DO0idqMjSXj0/
T4LvpCjwUGnHcqK8n9YyCVb6l8UVhn3FY4IkctoKMhwYrGzqWdOKlbz/wtes
IoP1b+33mwK+4MmFJklDfjJADvlsq2wzVv/NSEEBMuw7dVZQt68Ra/osi++I
kiHimqS8uFs9qrWrn6gjkYF66rGzaX8t1jfI1m6hkUHbzrkyousznv0oeN6V
SYa+G8d906eqsblktKubTYZbc5dKX0p/xPN5nwz3SZDBMsl38A6n/rSmJv56
KkWGJW1VySeD77E93GTxpCwZGJfO3KZyl+OVICW3mO1keMVsz8p9W4rdPpKC
S7vIYOJ0MLPlVgn22g8wMg+QISecl7WgVIT6d8pjBRXIoJf+TqrvvwJO/xkt
baJIhtwCFa2be/Jw6NK1g8xTHP+GDyVlvcxC07MKFTaqZHBdEzBgOJ6Bo6dY
qo3qZAjRMNN4pZ+O5kcWm6Q1ybAn+NWpLS2p+Htv52WP82RoP+aYri76Fi3l
Cvt7L5KBdSsrxcUuESekQswOXiXD+XJvhY/8CThF0n4wbkCGBUvXTxrBMZx+
QZ5H1ZgMW/J2e6sFReHsStKT16Zk+Ppj7FrcjQi0W5wU4TYnQ4nQtOCawVe4
MNkUctmKDJtj5mx0ol+i42jGhpw7ZKjXG9x2Kfg5cg0EJArZkiF829CxmY+B
+KjDcofZAzI8Uk/QUd3hjzxN6gXvHcmQFxsdfDLqCbpWyyqyH5FBeuNhg94T
HriqTLDazo0MDbIyMl5nXfBx/uiZL4/JUPjxpEWQy0Nck/6p7T9vMqhZSblG
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-1.999996217909009, 0.9999917628144483}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64909842784485*^9, 3.64909845398772*^9}, 
   3.649099136164795*^9, 3.6490997998021297`*^9, 3.649100698015128*^9, 
   3.649158810856859*^9, 3.64915884946725*^9, 3.649158945880561*^9, 
   3.6491590004788675`*^9, 3.663689826849375*^9, 3.682428331151738*^9, 
   3.682428411729549*^9, 3.682432770108342*^9, {3.682432913249296*^9, 
   3.682432938038007*^9}, 3.682433042739191*^9, 3.682433124904018*^9, {
   3.682433195720007*^9, 3.6824332355529633`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Iota]", "[", "z", "]"}], "\[Rule]", 
    FractionBox["2", 
     RowBox[{"\[ImaginaryI]", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cot", "[", 
        RowBox[{
         FractionBox["3", "4"], " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "1"}], "+", 
           RowBox[{"0.5", " ", "z"}]}], ")"}]}], "]"}]}]}]]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.682433376699193*^9, 3.682433384379272*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Iota]", "[", "z", "]"}], "\[Rule]", 
   FractionBox["2", 
    RowBox[{"\[ImaginaryI]", "+", 
     RowBox[{"3", " ", 
      RowBox[{"Cot", "[", 
       RowBox[{
        FractionBox["3", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"0.5`", " ", "z"}]}], ")"}], " ", "z"}], "]"}]}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.682433385158643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"\[Iota]", "[", "z", "]"}], "]"}], ",", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Iota]", "[", "z", "]"}], "]"}]}], "}"}], "/.", "sol2"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682433404332962*^9, 3.682433412842691*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/+4RyodePx+9/So9DFzljY3GT/iQiybrkrVoCPhdXCcXR/KhjEdGz7PaARAX
5ZMaj+HDhSf6d4Xf7gfZhBfrfn7gwzcVhMdVsg8WG2vue5LEh6Xhz/u1bvbA
Cnaxw9l0PmyeejTtX9IF60Ns7mzL5kPa8q4VXn87AMpDstrL+PD0Aa5W/NMI
Bi7Lmz/X8GHKXMPOBM57Mhb99senmQ/PLGyXCN1SBdbGg+tXDPJhgc9M4JWf
BDzL9V+7LuTH3u3KYZu35BNflyaiJ8SP3nrX9Rf7VJAQ0QstNEl+HPJe8jfa
sIa8MI6UTlfmx6uqWX/m6lpIDFtzw11Vfrx3zqnnwNkO8jGkxPj4Gn4cVzfI
XLKni3wr/+vHvY0f//PQKjaO7yV5Lvdiqnfwo3TrkxtH1vSTUlHVnDe7+dFL
ybbv3d0BUpPwrdX9AD+2FuQKHC8cJC3Gh6aMjvDjA6Eb06PdQ6SHPUhXOM6P
1x4zNkP7MGGGeG1k2/FjXEporn0mk/xeK2OS7ciPar0GDZlXWWS6PP7cgwv8
+J7v9eVCeTZRqrJ5vvMKP/oreGiwothEr1q6eNKTH7eb936YEeHwYW3R33d3
+PFVTuNAuD1FAutvqB0L4ke3g3/5zr2lSEKjxhGRh/wYb5C7QLSWIlXNvbfJ
M36EQ2rpUmMU+d367MuFKH4MPpRI5+bwqWzH/q5lsfxo53X0wO5ZDv91cUvU
xfOjUuwdpiGbIid7ksH/K6d+obDnRtUUud131mVrJj++HKl+5B1PkdgBxRfM
HH7sH5y7LepJkeKhqpLIQn7UjPMr+reLImzmnSmTCn5U7ygW0ualiCS1ZeWC
On50l328MI6wyeZR1tHkFn5kGSSfU7zEJpbjr3zPdHPq/6TCa7yETW5MHE6W
G+LHqgT5r33FLJL377uk5x9+1BU+ujmBo2cO8YSUGUgK4Byd/W/drWHiKrVW
v8FQALeHH28IUB8gYdJdFwKNBXC864IMm/STVJnHUTqHBZA/7OLLF2b9ZE5+
bjbKVgAXJt+b07nZR4JVytPO3hBA7RpzB9fmHhK3yWXtdJIAFp4xWeSa1kl6
jybIKSkJYmq11eca5Qby1nw210pFENeEKt2PvVVPHCz2nXu+ShCP6tpFPuur
I0OWQ1myWoJY6PRf9PfPtWTkuKq9lIkg2vYG3N1oVk1m7CIT+G8JYvr1Jfqe
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
PSHfnSiQyt+ZvICPhhtDAvW/x1Gw2P5N8mJBGppuOXGH1kTBGh7elO0iNAwV
yfl4+A8FW6NOp1iK01BD+pF6DQffDXULUtylaOh/bkV+DAffzVrUUsPoNOw8
pawflU+BzTX/1M9yNOxQtjh+1pMCF9nB1HIFGm5eJ9/yH42C6ylGacPKNCyM
P5S39A4b/M3i0viX0fBw799QUsrxU2OC6ctVafjQd6Pu134mRIc6peutpOE6
2fuxL38NQ+La0vQTq2nYNy601SdwCL6Vrs7wWMeJ/6EPfgsPQpFjcMazDTQ0
yvCiHzTvhzp+dkbKJhrquxtfm3Pqhe63xpnV2jQsMi/oeLi7G0Z2JmaObKPh
lrUzP2gjHTDbJfZNBGh46e+gskJpCwh6u35bpUfD089uxO0/UQ8q3zW+2++m
4Rue87krHQpA49iD7957aSji2cKbZJsCuv/Gvkca0/CtQ1pDYM0tYr7pa1aD
GQ0dob5tPLWInKqmkYmjnPPGR7a6F/4iFy9cJpLHaPjyol1ZgHsDCY7fnL3P
hoZH9jlHU+c7ierJFTbx9jQcnFuX82ukm2RJMnhEHWiY1jPLXLmhjxz9KfTa
xYkT7/Jai3KNATLiPqtf4ULDO+sdI29SgyRgFdWz7iIN86Y1njw9N0yWtnbc
Cb1Mw7Y+s5OZH5gk894v1dErnP57CE14fGIRM728AlMPGi5KufKefpNNWL+T
HZJu0tDMWer6EgWK+MbGCkj50NCts1XteBBFlC2fxV3ypaGyVNpZnxqKpAnf
3VsTQMPZk3ovVP9RxJR4MDWDafjjwjn3cA5eD11wCX4USsNcc+elvRx/4KNy
cu3kQxreyLYST82kiEK9acWRJ5z74+BAnblGkeQAfdfUcBpqvpu3/qNGEWOd
TRKykTT8bMdE8QI26WerJl15RcOGmIBvIpZs4vVK9lBjDOc+56khdzeLyJkJ
/t7yjoaeyl1TaXYsksQ7Exb+gYba4vTz+a1M0uPUXncsifMeynJMlX8MkxtK
Ve7fkmkY5udp9Xj9MKFX5coqptMw6O6JdT+fD5Hdm99athEaqs5O9Mi4DJKP
XM5tJ8toODl3d9138X6y64v1zZxKGu6NUFsnep2D76dMFi+toaHL6NJ9Pn29
RLxko213Ew13V5rxXcnpIW6PpnpPDdCwez68cEtgF9m2yp/luEAa//kXDB9v
aiE1LVdDSnilUTxeXbS2s5mcu+e0brWgNBrYZVw4zGwikb+NL7DEpdFtl7cU
XbCR8BDpifNK0pjkrBs7dKqWFB96PeO2RRqDX1YErZcoI0l3upqe60hjqa1k
qJZvCQlPXZKeC9J4aaOW3q/ZIuIoH3VZ3EAaZxbOHFD5nU8EuiPYHw5K46YO
/Q9//2aT3Rcfd3Q5SWNaG1YN8b8hP0MD8kwipXHPzapbN9flwsfcwmj3V9JY
MRiurPL5B4T95vOOjJHGFQHLTEY0f4K9ue92Zpw0pqooKsXoF8LCxT4pfqnS
6Psr4rbsrXLQS/R4l1Upja8NTz/nqq2F7LLzQasX0LHrrL5S29Uu0KSh0BNe
OnKpbw8SEO6Gd5bigdyCdOQpd/DSjuqGe/2f/OrE6ajs4/fwv/IesOYeu+Wl
RMflmlx+hdAPvwxzuYeX0NFkq5Wve3s/GIQ88Dq8nI4TDzy4f98cgDXyGz1X
raZjtegtyy85gzCj6Xa1ZgsdJ/mLHylpMcH1+s6/utvpeIx1zepEKRN6cmju
75GObaEOwn3HWGDO3zshtZOOfmJLroj0sKDEONnN05COpspcTf22bNB9dGd8
YA8dg4TbtTbVsSGp+fDFQ8Z0tFf5edZiGwWqS1VHv5vSsUggYu3BexSEO0ye
X3GYjpFfRMbiyykQTcxnPzCnY85Rv3W3Jzh6feKx8+wxOs7uk0x35eDz5LYz
zDMn6HjWmCfsYT8Fjre0nH7Z0vHlseSHT95R0FbIN6Rzmo7M7NUHcnUoOCjW
4BB7lo6Pa4MdxSPZkH/4Xb+EMx27eWyMbfJZsCXiymkPVzr+elrKSE5kwseu
3b19l+iY/zn4s6fZMCxeKWdv6k7H3ltCTQKfBiHs/GBX5jU6LokaixzL6gf+
lHQbVU867q09ohh7sxc8ZgI6Qr059f0Jdx0Y64IRPcsT07fpWO/F5tmm0AH2
AavaTvnT0fXxuOyZhU3QUDFlVXmXjgrJYyXyx6thH72kees9Op722jc4lVoI
2VbPLd884MwzQOZmyY2vEDu4zfzaMzquSYl68XTRD8JYL1zfE0FHpW0bzFZE
V5KQ/1oOH4ii4zTlKXfWrZ7wfP9Yk/6ajj5XhFSetraS/xbcOKQSS0fZ54F8
77s7yZDR/l8hcXTUUaPXp4T2EOtQRdN/8Zz4dq7P+Eb7yK86VoXdZzpeSg3l
fckzSHYpZhmXf6WjFO9eY/H8IZJmF1KmnUbHpwNl63h0mWR1nPW+15l0/EoF
98W5sEjUyNoSEULHcEn7l6bH2YSmNW90JZeONWFCvm1iFPG/UVHY9ZOOB6tO
Lvfk4O3Mj5eG+4vo+HFyka1FI0VcBV3zU0vpWLHg+p+TMxTpNsFdSyvp6FZG
m185TZEjT8Tzgqo58W09XRuaOHq3tUPvTx0drRq2etKiKKKr8jnHpomO5NjR
Sb4DFEly9MbSVjoujPPfbjPMJpq2JwtVO+kYHxd39sE1NkmxABPvHjp6KS39
/GyWRdJ3z57YPEzHtBp/e6EBJtmKLf2hbM77M6zxX3qISb5pZZ4fHqXj4sdr
BK6nD5Ns1as3o/7S0WHM0fytxxAp63LNcpOSwfMsn+tCl3uJcdMBgwq6DJo/
4G3MbOghlVVry1cyZPBRmXGbum4PqclmtrYtlkHv2N0734h2k6ZIh9nda2WQ
69k8S6mggwxYntRRNJJBndWrfseqNhLHg5Dnvk8GQ8UMxtVXNhCmkdK+Xwdk
sFRaTD17bT2htFuO+R2RQYPygqYIvVoySTe/Pmong0VbMyVSAqrIguoDGT89
ZbBH6WTFyd95RGkvaLt8lUGj6r0eartigZ3jNBuSKoMilMqH+57xQLSf5iZm
yOCHEs+aydbPcFJ1dN9otgx2qf069GFpGkRzv7ZxK5NB3j3au36dzQW1NN67
1/pk0PpVn9ypsApYv7y81VdWFt/984sQiW4Droip6Fh5WQySrXu5Oa4dqiTV
HAqVZHFklWK08LEOuMjlNSawXBbjipxfvj3XCcnNGnzBGrLIvry8fnlsN/ge
tC6N15RFg521Zg+39sCRosD75VqymBN163p9RQ/8TemWF9eVxetle18EzPfC
1geP1j/cI4sB+Ssalp8fAEGB3Ikv+2Wx5/mA6jhHXzXfZGfUmMhivy6HHOMG
wcPZcBf9qCxeGTC+ptwzBPt6LglqWcriz6uT4/s8h0HxWFTF0eOyuPPM+bA3
0kzI2v3P4pmdLLq+6+k+psWCELJcOeO0LOoeMTr8N4sFJzYf7Gk6K4vPYn9o
r9Vlw/p4z/fT5zjr54WBk0ls4FL54KLgyvmeez/tL4OCqvD6jdsvyaJEdehZ
z0sUREss/Hf8P07/3OUOXUj///+31md5XpVFbWO9o/sHKdCft/J56SGLXfej
bZU4eBkVyBhc4CWLPq1/O7V+UzAj3WDs4COLN7P7mk0JBRavHn0t9ZXFRruV
6l8sKEhZfYihESiLwbILjbZ+Y4NkmrjXo2BO/zJONT9oZ8F5/fLef6GyeNHT
/eHtb0woLb+71zqMc96A7V7W+4ZhhaXR59wnsuj05MbWmwGDcLuXV0btOed8
zVGlE+f7odM1z+NuJKcfJmHT6+d6QHfGu4t6JYu58z67PmzqgnA/2G32Rhbf
2OwRm9zcBpOSs/Fp72SR79mgotmFejgUmSGl+FEW1e5dYF3QrATh5E3tvUmy
WMl72Tmx8y444PjOPSmc+2PTWPv2dSb5WfIpLiFdFgO90vv3yJaRpUddxKW+
c86ndtUtr6uWeHap/+eeLYuajIj28qIW0uQ82Nz8QxbL9kSoBTzoJFr/3u7A
AlmU/2EjSXftIWG37WNjimXx9J/IBSf+9JERsaUiAuWyeCR/rd/E8kGy73n7
RecqWeTavDv/3cwQea/6oqGqRhYbvqiPtXoyCW+Spe7mBllsCzkT3vaZRWy3
y8aEN8vil08L/q6PYJOswlqB+TZZvKD6pYB3F0XkzR6et+uSRbeKqQeFXyhy
pd2ktqBXFs90pq3OoihS4yi6bfWgLF7il2ipmqfI+smSqFCmLHaaGc+eHaJI
sHcA7wQli7FrFpubJXP0qbDhOYtxWRywuxaVdYoiBk8X/vo+KYt9Oa0a2lwU
iV6Wq7V0ijP/w8U16f5sMp9w84XvrCyWfIxR+MzDJmk/pxwOLJTDqbKLN43r
mIRmmlb+hU8Oi7qemYRqMsmFlsuaskJyeDzqhsOz4GGyanxkvkNCDj+4Wjp+
3jREIhb3P76oLIcHd9jLpV3tJ38/xMzULZXDVW0rQ+mlfeSwlq3tNlU57NuZ
faVFuY+IGreuWbhGDm/sPzwRV9pDvK5X5z3aKodlvI+cwqGL2NeRsbTDcrgz
d3XgM5VmIt5Z/KjbXA5p2x+vHlNqIpnDtdqiVnK4UuzzqTcKjUSSm+lpZyuH
5x1ee0ctqSdEXVZI9Lwc6lft3H3euJowvF2X2fnL4X2u/ZPlawtJlfoSM5FM
Ody3cEXCkabH4LF59R+tLDmUulnLHaEQDSt2aIXb5shht++zMqGKd+B5ZH9H
agGn/pAX17UXf4HV3lfP2dbIYWZXwmz4sWzwr6u6ncqSw+l+73vCF8tBs7NF
rWtEDkuavMSLl1ZC+3B/sfBvObwlE7W3XrQKNnPPidtOyeE6tSCjo+xf0K2+
6oUwHwNfuK3KyC2vA13vW8k2ixkYm2psvkKzHf7oRNh4LGMgXLr3IFi1Az79
TRZ5osrA0hNm/xSTO2CZ6+Cp0tUMtMhViI9p6AT+EyZ0rS0MbPTRkbi9pQdy
GY65pjoM7BJu7J2o64HrdT4u54CBK02dB8z/6wX2/tT8V7sYGK1kN3Miow+q
dZTchQ8yEEXJKw+TQQj6q7VM7TADl42Ee72dHASDr6YVO8w5a2bmzp7nQ5Cm
fkfN3ZqBfxKc5NZ0DMPF/sjq+zYMfIra/0RvMEH9ddrNj/YMpD+4KvSaxoIe
61/qBWcY6L5HKkT3DQsiGcz6TkdOvtdCtwZXs+Fo3aLbM86cdf6XH4fes0H8
gfJ6mQsMfKe0JqhIhoLi/VtaNNwYuGPUu0jtMgU+Aof897kz8Msaz6nK7xTo
/DyneeYaA9fMGYe+ZnH0pZdvh/cNBr7a8Fd/nIOfiTpRQRFeDNxff83Ej6LA
4W+6dqoPA++/96BHpVCw5Gt1T5UvA316lu7i6AtoOs8KZQYw8KxHxNK1HDwP
U+fbzhfMQIFbEUXHG1mwv3/x4JJQBkrGNQ3MfGcC7+utj3QeMnD+VKU7y2IY
sq3Ndhx9zMDfr4Ie87wbhKsMF9aFZww8siBn492YfthQ5/csKIIz79aDKoP7
e4F5/9Wu2JcM7MwOuaf6pgve7M8czYlm4NzVhXSmVTtYC9S+aHnDwADziAPC
3Q0g+5Nt9OcdA680lkwsHa+CKi/+SYmPDDSYkHI8Y/YTAnWWRq9OZGC6oYN7
iNl7mP1yeMommYFUQpL4gZwCknL+/FuPNE7+e768rcrVxFU94OCTTAb+2LS6
LJe7iazsj577nMWZh8Li9H+aHaQr+ltcaQ4DNQpK5C2WdJMI67oj/XkMNM1y
pSVl9ZLDjBEenkIG9myN+rpeYICI1gkkKpQwUFjbyG4J1xApvL/smFY5A/P2
/Sfu/GaYeO/fznewioFxmbJz3LMcPSZw9Mu5GgZaM5a46Aizye881xN+9QwM
umHdadXIJvFegULRTZx53eoulnKiyGmdmNRvrQysc2N/X15IkcV/v9vVdzDQ
zb0sXO0PRRq/1IuNdTPQf1Mhw4Tj5x+cH80U7mfgqq4+6WPdFKmHCH6nIQYm
CiyODXzD8fPihoeLWAzs8Cm6HrqXIrYdo6/URjn9/Wf+3/0mNon9FMG+85vz
/iIPTM0cYROml+G2nj+c+y/bHByRxyIbTMf89KYZWMGrYvpGlUW+jRoumeeW
x6bJvyl7fg0T7twx5+OL5NHW76MJ3+JhYvDgRUYmvzxGeh6Tvus4RKo2jB+6
IiaPgZW/MrKmBkjfpUjfUQV5TNM7WHBXqY+o7zSqPrBYHpUmgm7oOPUSV9pv
5YRl8piken6ZUEYPmf5qlO64Sh7tPxq1xFt3E/HJ38PdWvJYVPlw2eb8DrL1
yl7TuoPy+FB43vWqdAO5uXvyheYReXz95Ml75ak6kif7auiBhTwaXZrSD+Lw
6YH0SZ8DJ+UxOLLahSurmthPvUopdJbH1pz0p481K0iIx1/5TH951Kq4nim2
iJAurzd9L7PksfhU57Sa03f4r/KFa16OPFpKbbrzxysbBBc/nhrIk8fUj9y+
TONc2EB8RTeUyKOgMfNy9PhP8Jk9szmvXh57InMuMBzKQOXaKt+BEXlccFrK
vuZlHaQVLRUX+S2Pqn+iFt35UA/75OTDNf7IowDfQ9KX0QBuaUIJ12blsUCL
778TvU3wc5JZKyyogDKG9EAL53Y4fSlxucYyBVx9yUz35KcemMqNTTysqoAv
YmeS9lj2Qohk1JZrKxUwtPjn8n28fZDyOXT/j3UK+Mrm/OpEu37gG7lw+bCO
AtLO+MSrrByCCHCcvwoKKHLy86kVjUOw/p5tQKSeAsrZfvxR6DsM5msPvejf
rYAHV/96fL6WCcwbe9WE9yng4CWTqwsvscCrTP/z+gMKeEDNwm8LHxtoijrb
Dh9UQMUVx1kn77Hh3TnNn1cPK+AFq+6IA/wcfPu2+kCkuQJ+arymut+Fgkqh
5Y25xxRwi+phhYUc/LM/pmjXb62A78fferhx8O1fnDRLyFYBt0lcOTTEwb+Q
KRH39acU0NWe68U0x28v3cPLfdhBARPuV5+9H8XRi8/mAq86KWBI4LYd3Esp
2DM4SYt0UcCGbAFfHXs2tGlTkbkXFLDJ+3Wr/AkWR6/2r+h3U8C5hvbCEkEO
/jW0JwldUUCWkPKK4yeHIFytQWf9dQV0e30nxd1yANa6V+abeSrgVeVzNssn
eyE3v9DkqjcnX7/UxpiN3XCEntP04rYCTh9raVsq0wHDp9Ltc/0U8F1Vz96A
g40gXKx3b9VdBQxjb/10Yk8VrF5bmv4gRAHH5nQX3I3MgXOTbaJ2jxRQvu3k
jlT9HBJk6bCl5KkCWpdWq0kvqSIfs0btNkYooKNOk3bQukZSuvR6yPOXCpi+
d20BOdBBmL4L0xe8VkAjjRuyzrHdRHg4uNvprQIOf5KpUw7rI6sPyIjWvOfE
DwcTAwmOPvwSpa0Tr4CaXCbNT5WHyTmZVXYxnxTw6+u1o79/MEnQ9S/Bwl8V
cMpau3oJL5t8bNdJc0tVwGB7jjOg2KRUP7+rJUMBTxoXeg8HUoQZe0BkV5YC
Lhy9IW7aRRFh4Uat+BxOP2PeBjRx9OBqV1tb6Z8KGPdGZCaPSZF9NcNBNwo5
8SWLW058psg57cupvSUKeLrVSHjWjCJBEXOd+ysUcEZzY+l4Kyc/l79wyi8F
9JRieCaacvLbS2gp1Sngd6qxNe8ri7AKw218GxVQK19zkaAQi4iuUQlityhg
0b2UkoSjTLL2fnzKkQ4FLH0QwWf2Ypi4WGQLqfVz+rttsLhWfoiwB3uTC35z
9uUfGigJ93P03vmOdX8VcC+/esj7PX1kbdJfwafTCsgjpduHd3uJyzWhkw48
ilhwQcQoR6qHsAU1BAXEFbGamWKz3aCTUOoe1nvUFfFNUasgsWsg4qGLApLW
KuKAW9QDtU31ZP3vkC+MDYpYe+RgQo9gHXH99op/WFsRl83P7vfMrSYj+wqS
7hooIn998FXNtHIy4izJV2ajiHefHD6iq/aNnDAddJm2V8TWooN700+mkXLN
7LqVDor479mVgaYXX8nHaee3vi6KeLjDWWTbjjjiEFC0C68rYtZuk5KAEA/o
iPG6/SVMEZ+78eKlDgIH/I8yO58ootePUtWxphzIclprJv5cEec2GzwvKvwB
ERtaljm/UkSP5Jt6KxMLwDxb64dqgiJOyiwoxU8VUNHM5g4vUMR3PRFRlx0b
QJf8PFtYrIiD4pKKIiGN8DE6omqyTBGZVqz7yilNEHh2z6tDNYoo8DuHeZ7W
Cv+r4MrDavq6cCpUKhqQ6N5zz4kGijQgsZcfGpEpMqSJQtEgmRoVkTRIg0iJ
SGkgpUHt5kRzonnuNt57RVRKfef7/6x11l7vu9693uc5z9GdiAexbvr8aYen
5Bd2o3xJM0+vv3IgXdog4nWTjVT+qA+k/JODSFF0NkZnAD1pFjFu52PAW7Ne
gR2TA+h6bBZDeyED1nJGrRqdhtCQT9DtsyIM+KTmbWGoOoxMbW244WIM0Ogh
7TSHhpGWqnT+LykGMBKiDKYOj6J4iZHV5HIGDL9weWvIz0HSvwvv75dlwFMz
B9O+lxzk0xT520OOASHxVxaNIi76metglkwwQGxXo/3vCi6yjNEtbaUYkF47
dX4UaH27KaciosCAF3vLH8/F8BCyGX+4WZkBCtnPjAK6eSjF4MuMjQoDFq7L
F15M69vajrQLtzYw4MYn+cKWMR5KcA7veK7OgPEq9WzJdB5avdDNuEiLAXoa
Zt5q2rT/fmxZ0LWFAcry7fLrPbiIuUFPbU6HAXsV3Ce+XeagJyXr4uSAAWlz
Mem6MqNI5piklM5OBsx/arHosdkwCuNM+BzXZcBu/sYP5WgQSd5sH79qwIDX
Ey6Xg3Lp+2RZ8ZmIPQxw1Hpf71PXgxYlJXzLMGaAsKylYI1YJ7qDAvW+HmTA
8k1Z1ncqv6P5Xy9l/TRhQF0w13zJbA26efaYksQxBjTsMy4034qRW4j8on3m
DNCdaJlv0leIp1aLuNlbMWBQuC8vZkUdds3hjfqfYcDFqDc/lJub8K99jWav
zzIgLCZ3lZBgF3bszakut2NA3mQON3tnL+ZciUXsiwzwWBgx+4LFxudFb6cJ
OjPA9FLSrvmP6P0j1o5FXWbA9hXyT7JfD2NrzQMPdlxlwGRon8xJWg+6KrQE
LG4wwKAlwAISOPjkqVUuHh4MCM3OcnN7wcXNP+f1P/FmQPPrpF1SJjx8xG/A
JNeXAcaQLG5UzMMNK6vKmv0Y0P3KeUJtkof3p73bNOnPgFVDbppGMzxctSsy
YVkgAy5/kGGe+s7Dhs3uKzRDGJDRZd19KpiHyy9Y+x96yIBnTzfcPqfCw7v4
DaadIhhgZLGJqEjn4sJwVfvgKAYswQeOLFDk4u1rpdtToul+2SvXTN3n4Fw8
tbcqlgFlHRKSXYOjePPhzvyR5wzA6g76F7aOYjX3xFjFRAY0XTCqlqgdxikS
wRJ6yQyw+Zp+1m/pMFZ+efnmmTQGFImfWuN+bAjL18DpuEz6fKvS7DK7BrAM
67vCqmIG6Kzby4n/14fDMj5Gapcx4H1WzKYVhn1Y0jBO+FgFzT+PtEjRR/R9
c+nCSFgNA85v+tlcv70Hz5UIpC5uY8CRpKYBQZNOzD67QUvgNz0fJmkbn/Ia
MU/ild6ZSQbc+av4dV3+VzyZI3esfJoB97TZ0aPBDVhYbJHbPX4mmNzrbhT8
rw6ve9tfKLWECWcuz9SnRFTgS1NRe+XXMmFp6tkjAUpvsVuchPltVSZ4uo5v
dZt7jX2N7jgOqjFhz3d24um0Zzg8+nLom81MWKJ3R25LiCXO2bG/WUOXCZue
sxtdpNMQn//8M7stmZC6z6IaGBVIWN3N9dVpJgRucOPfdPgLkmz76Sd8lgma
n5N5i4OrEKXalVh1kQkbKsx2vhWrQ7r1OT9M3Jhw8pDN/NPljcj4hhp/licT
Vm+Qt57j+45M5ROkZH3oeJ28VY9REzrvGqbVcZcJbgUqi7sqW9B9WUc3mwgm
OLP8jurS+0N4Mfv+pygmHI4P9b39pQs9tTeLUX7KhPcVB+MVfLpRWr5hEfcF
E5Y/HGxJnelBX61WC115x4SU+wuirZezUfuiJyuaM5gg5qVwfns/G7HfS67d
ms0EgSN1keoZA2hiAd++OcyE2H9sjdemQ4gvzdXcspgJ0qvvTm5WHkZCxziO
xWVM8M07k8yeGkaySS2hflVMuFggFj4vYBQ5NzztSa2l62m9UbN0GwdVTFup
NTUwob135kFxLwcR8gpefN+ZsHkBOhvnxkVX94xUK7YwwbADa0QI0Prokip3
oJ0JW55mbsy5xEOK0Zfsr3UxwWy9Yty2ch7yKt2U+6yXSfvxG0tMJ3joO2da
+DObCXx65+5rzfCQ6rIC059DTLh6MO/fTCUP3d7u+0qWwwRBncrGNnMe6rDR
//PfDyagSwv89yRykVaQ6G67X0zgxkTssXvGQYEfakND/zBhl1/6uifao6i/
82FP7hQTirosuOb2w0hH6Jha3wwTFjMMLtqvH0SGkeKwgI+AsIv7lH569iPX
N462UfMIGMMz+zinelBcQX2gqgAB4x59yeEv21H1V43MIkECssUoOdTYiP4O
hrcfWUDA9ZNWX273fUZr/k0KjiwkIHPRybO7y96hgxIn1nkKEyCacdFtqjgN
v97CvPFKlI7vKb7UYNWIv+71jtsqTgBV1xnUBO2Yz6q3omYxAXIso3+e6j14
nevuMWsJOt+h2I6LJ/uxqf8rmUlJAnYt/CSdKTWIfZ8KQ4A0ASlFoopdR4dx
2js7W2IZAUZ1ViY260ZxW1lV4PvlBEjvawk3j+Rgodb1mforCPBJfxCmFc/F
GryQ9jZZAm7r+jvdM+NhC4FxQadVBKy9u+bFwUp6X1t+ZN18BgFtgvuPqdP6
l7U269AjJgHKzL6rDNrP9iHZGyosAvTSTp+XKuPhJYfd4gpJAsosqaYFTjys
c7ajwkSeAAVc3dM1y8W2bjA2tJoA9v1aTf/LXPwgOE7GQ4GAI3mswHktHJz/
QhAklejznrBZe3kDBy+r+hSovY6AfxNNvIcFI7hM7sC6exsJuJfEI8jkQfxT
Lf0QU4MA5objQWrsAczQXXojXZMAK4/vOw2JAXz5YnNF62YCVDtL+esf9WN5
bGm7DhFgvW9M0SipB/tYOMdVGRHw2iBbaHlGCx6fXRXls5cALbne0Kvmzdgm
ujxkizEBZuXTxoGLm7Bhyyrv+IME8H+BBZmejVjycLm5+zEC9pR0pA5F1OJY
vVVyKrY0Hz7mfTB4nocl2WXSvWcJiDpurjy+MRv7+jqJPjpPQMS1xJ7B8vfY
trBsWvAiAfE1imfsp19h1a1OLW0uBBTc1PyTLxKO8lTLIgJuEvCw/eDRk3dK
kGqVY9B/vgRMTZ95i+vKUKzdSr/JWwScspR7/YCoQL4Jjq6n7xJQWWnBLqyt
QnvIlSY6wQTYVYmeyCptQPkFpXt+hhDw8+m0hIZQI9pg7rgrIZSAeonzwkXG
35DUk1J16QgCnHVx+AFeE2pZ6ig5Gk33S2aN1rurHWjPe1mRuBgCVFhFDdRo
J8o/WDrP9BkBaxpGtjmnd6FnQbJjxS8IGFxWU+q6pQedFS6teZxEQOM7GQdL
537U8sqh/EAyjf/brC+KBmy0R1cWL0wloCFRaTqZHEAbfBxSLr0j4K9SuaBx
6yCKY8m+VHpPgMDRYgPvrCEkXVAS3ZlBQPcHJ1XPh8NoYmbFfaNsAlruLsv/
DaPoxy+ju1M5BDiIftzrKsRBg8Put159JMDVQ22tUQkHdXenepvk0/xOmscv
5MhFLU3d7gIFBHRyDMa0F/BQQ43U9beFBNSMBVru8OKhyrLdrubFBMxlP5yS
+8ZDpXlXnMVKCXiabnrLZJaH8t+/vphbRuuD6Ce+Ng4PfUhqPX/uE13/UaGt
zEgeSosTs13+mYBhB9f/dvBo//wIWZd+ofkzMN4c2cdBz4KdzC9VEbBvaPxc
0LlRFOX3/ASrhsbLiSrhOg6jBx6NR2tqCZjtb7367McAund54WH3egIuqolq
fentQ772W/av/Ur3o6K6YnxPN3K3ttvT3EhAXPr67PcOLcj1eLS+33e6Pqt0
n8cudchWf96O3hYCNHadZHGTnmILpL4tpI2Au7Zpg7xj5dhU68wW1EHrAeup
h75oIz6gEqHJ6SRAe6m3cz1ux4byFWqPuwnAxf1FSeU9eOfKaRWDXrof4+dt
t61lYx1JFeWJPgI6ikPUzPmHsIaw+Zp4NgEvm/5zuL53BKvwhZCHBgmIIYRE
YqU4eM1EEWPeMK23DgMXjlhwMYM7Lps6QsCqH9PZkTv+/3+RNcvNOAQEf25i
6vxfX9pMpRbxaH7lPpL7TOuRcIP/4uwfdH199dWlP3mY//PHRbY/CTiwQGax
3nse/lvAXbh0nACxrFdZDUY8/OsDIVj8m57v697NlkVcPJpykM9pgoBfejfA
mcnFffG+M4wpup6h6y6bznHwt9DB8eszBAz82Wqg8G0E1/jLjinOEnDtmtjE
W74R/Ml7D+fbHAEZ6p0S/9YM42yHtP6NAizY/KT7W9TFQfzE6Oq3YWEWrNt4
9NetRf047L/E+shFLDBxumYfs6UPB25pq9YVY4HQXUdjZbte7KkA5XFLWJBs
d8JSrrkbWwkIZR1fzgLjA/MXpxW2Y8XciEef5VkwcdHebq90A/7k5Pj+xBoW
zHmUft88UofPKhrUjCqwwONbzY7PpbX4ddhfwcVrWRCs+Fb1s3AVVnY0czyk
xgIjw54PsfoleO1qSq9tGwu+Npc4HDj0GFe2TlteQCz4679sdZTpLWz/4Kvb
LLCg8cLjw6sGrqA3c7feEbtYkF/uN3Yw4Tla1zIod8aQBVECkmrr43KQalDK
OOcICyI8+Q7vKa9G1bv9FnuasoD6+i/osl8tujhjrrzkOAsa3sjUNqfUodRz
EhYbzViAVnzTOyf8FW3Y5fLF1ZoFC5d0JM7/3YQ2Tm2Jm3NgwYemBTG+vG5U
nyqZF+zEggBr/VUzb3qQs83Id9YlFjTdM5zuvNCL0hueiO1ypfsntrX8yVQf
0kiZu3rHjQXWbyzzd24cRF9PN4Wu8GCBhU/kpvuCQ8hl5duURE8WbBkeran/
NoTe37Hqq7zJgrsJb0OaLo+gw2jrnJkvC95oPrjC3j6Kxn9LyfJusYBz6K25
BR8HPXwzquHlx4LUiB3MxR84SNO61FjiLo3Xad7031NctOoFW7vEnwUrugr2
Zc5yEX//wjVXAliwSifj9RdPHhpcrSShHMiCkE3+BgubeajaxnCmLYh+/4Vr
s2do//j+ld1AUAgL7I75C8/281DUYED9f6EsMJ+Q+bzEg96nlFLyfj9kwc2V
cTrmH7jI5nxNQkI4C6TebOZ2eXHQnqQfoSci6fx9FyL+VYygjaMSnuJRLJDm
OSNz3yEko6J+vvAxC3qWIt6Rl2w0d+GwiUs0C5ROqtU8UelF7JTLoBBD45UT
M8Xe2YEqeeFrW2Jpvpa6KfxWaUSRTs3z4AULchdm4rW3QpDHu7+jP+NZIGJ3
/1O3TRE+/WtlU/wrFqQkJy0eV2zAhhrbik1fs+CY3VOrAMc2vOHyqZRFSTSf
lyu1pFj14GWZno/y37BAfCY0nPzXj2f+xPo6pbCgfULXS/XfIO7ZVOQgn0bX
rz13YMZqBFdc7T3+/S39/lab81VaHJyWLajrn07jqRFzWO02F4f/Xa22LYMF
S3YETXtZ8rDbVr1VPzJZUHIvZ15/Mw9buZ1d+DyLBYz4z0cn5nhYP+/uT5Mc
Fry98nEBr4eHVWcT24U+skDiuaXQJtrfSaPKT7l5LCCy4+8aS9H64slJv4hZ
4J45V9NO7zNdBeIxrEIW+Im59zRiDi6bt8H/axE97+WWiakTozjUx9lCu4zG
a1p+S9muEbzOb0J0QRULFj94oD79ZgBLfpKZzKpmwZp7tn7fytl4Uki7166W
BSezl01s6O/HJf5u2XUN9DxP7jZ7rtSHzQLn2US30PO16FITp6sL76ohD+xv
Y8FYR2fhd5kurLxkl45AB41nfIXj6dcd+E/Ibclz3Sy49rrD2yu1FQeGLcIa
g/Q8CJiYi4h/wwVPlspU/mbB9ECM54nAcrwvup1lNcECPj6hJwl6pbg1On7t
5CQLpvpfFEfNL8Z/nmoi+Rkaz4Th4CzZPKzyzMTGjZ+EhtyugvTJlzgqPuz9
usUkHLn2zLjiwQek+NIsv2gJCfNkvFRDBT6ijJerP5lKkpA2Y/zXe1sBqn2V
0eq7lAR92eRNfIUlaGFiI3/7Sjp+a+B8tYXVyCVl6YH7iiTkNtWIM4SaEX9q
+3FKmQTXI2Gi5hYtKCg1/nT2WhJ+iY3M689vRYlpmlf7VUlYMRkQ3B7Ugbrf
mcRs0yQh/+2Vn9ydPehiutzrBi0S5LoNHhuJ9qKZ9P535zaTIBO8Ks+6qRfJ
ZFwuC9tKguTqcfv/bvSjfR/COJwdJNh2jSdxugdR2wezCZ+dJGT6CnQ65g+h
c1mr58nuJuHfx3rR94+GkW92hrSuPgnNJ3w0Hu0aRZI57ow2AxKSs7/X9Ilz
UGzObkVnIxK+PK7TFKjiINVcsY1Ce0nQVbzgaXCdi3JzG7c+3UfCob0rpX4v
4SH9j9G7NfaTYHT6hPq/uzz07eMZ488HSNBkSqxmt/HQ6TyVYxaHSPgTmBP3
hNaPn3m/rf4cJuG5soraaTatF/l59gFHSHjR9r58wIeHxPAtV9KUhM6VMne9
K7goCu/1yjpGwiorr4f1rzhIsWCp/74TJBSlDXqXLB5FOivORLadJEE7Vfnd
1NwQOuD8/uX5UyRQQbnk3bMDyOaLQMakOQnnaw7ggd196Lr8oeLbliSkr1rv
rvikCwW6x9VJW5NwQUhzt85YE3r+bawz7jQJ8o+f3JuuqEGVd4Jn8m1p/HKF
IhmPk3BXd6fI3nMk1FxdMzJf5zP+rb1+Ret5EkxWBoiLnPiGRR56KJyzJyGj
Q+LTQF8HZnCqNCcukOCiLqTtsbMXq+vK7brlQMLpLZ2uq4PZWD/G/qCUEwni
nuNZfgeG8MnJXItnznS+gtLPfHdHsNOBRQ7rXeh8V5+pK2/n4NuJx93zLpNg
9pM9kO3GxVECifeMrpDwIJdP69FBHk49OfWo+SoJI+fOsS2rebgkQz/B9joJ
xnoxxntmebhJPDLz9w0S7gmMb/bh8TDHdqDEx53mSzZ4fUqm95VCrQYJTxqv
8INlh3by8DLZ290xXiQwT0ST37O4WPlSI0/lJglvK2V0o5ZyMaqUn831IeGj
0puhWHMOPutRLNt0m4SeWHFtteoRnNPDd3jJfRJ2zxDksN0grt663+ppIAlT
vvpRt0IGcO/DGMd1wSRIGTgUZmWxsaje9vv6oSTsbFoW4C7ej82TbpR5PSJh
kcGKvA3d3VjQ5c/msXgSqt1FPW1PNWGZqt16nq9I6LB5d32D+HessibMROw1
CSp8auJHixvxkSZ1Z6U3JMS8+K/6jk4DTtBxSrJ8R/fLY6RMo6QS750/Klef
T8fLVYcg9nucMOgz411AAp+RTmbgkjTMX7myVa2IhOMbNA9luL/EWQ+MIkNK
Sbi7P1ZAnrqOSSJJ8kAlzZeIuQc3Y98iN4GdY3zVJJSFPNhfcj0TfWe31KTV
kGDomNvtfSIXBSSL3F/SQMf77RbkRRWhP9rnF9Y2k3B0+3HfpJxKtJ/Bz/Zs
JcFLWLDfyKQGJc2LKlnfToL6wE0Pl5laZPGpwjuoi4S5WqdCudQG9NlEaWbf
AAnW2bU6PSea0VPHwR9V4yRcLe1rJqV70eQhrxr3PyScehB3q268Fx3aJJOi
MklC3bFeoebmPiQ0q2d3f5qE1PnKjxJS2ciqu9Ng2z8S2q5fbTkcM4DySq4o
cmZJ2B9cw1oQMoic773q38NPQe6XttYml2FUeRGVzAhQEHV0ycdhqxGkcPB7
3Jv5FASf48pEG46im5oO3icXUtAp/kFrVoGD2mQWWogKU/AtLUD7328O2jTz
dPtHEQpkeAq1Silc9KBTS85elII/C6h0e30eGi2qnl4pTsH12HvheTk8pPfS
puXLYgo+rp4y75zkobi7s1k3JCgoUgwz3/j/773swyPWSlGwbeO8wxmPeejo
flXXVmkKVJ0fj5m2cdE79bLD95ZRsER+4GPDMw4SXX5KfasMBffaXCMVmkaQ
7d/fEiMrKOi6LtT678IQKmq//yNqJQUxYXe2fzvKRqsKV9cYylHwbndfcVZo
D3J9kZf8l0GB/M6uCptjbajOzyQgkaBAoObFHeb1enR73y0DEXkKXlawrye9
S8BdanKKOavp/IMufZO1X/DWpRkLzitQ0Kin/vy4UhMOn9zTv0KJgg0JglbK
eV34R2tfcYUyBVW5WQF7KvvwTw+q8OQ6Cmw4ltfipgfwOMsqn6dCP5/ifsH7
wTD+UxKbe3M9BedVtfafCx/Fk7adWUvVKOjnii/gSXLxXxFGZsJGCsavhT5W
W87DM8kn07dqUHBD5I1WYToPz+5/nFatST/fI8xePsXDfOPNyZabKLDPDONE
/6H1IUImaXwzBXnH+GuYOTwsqH00wU+bgq07GAIRxjy8oD0sXlaHgqVBp8WV
CrlYyOtrXPI2CgSHgiN0l3OxCCUVC4iC8Me7glpMOVi07EB0A1CgzvT95XFv
FC8RrYmY2kkBR0jSj69xGEumioUF7KaAy3/iytafQ1j64J4HTD06v470QLDY
EJaJrAjYbUjRfjHmS/euAUzIl3iH7KcgLeZiOLO2F2/QybZTMqPg4PbEpFua
rXhj58TZj6coiPgixr1Z0Yw1bmrZGFtQMHXws8zC001486d0i8vWdL2G+6l9
SY0YDqeYFJ6jYEa5zwWu1eL99s/RMVcKTsz/vH6YkYsPLu7RGb1CQY6+jrCB
YyY+/I7Q9rxGQcCRzAd/y95i08lojXg3Ci41qt7Un4vFFr6RSmM3Kdh+8POn
McEXyOHJfam7QXS98rJ8QZxyVDlPnmcYQsG1q5ucDBI/I2XbnM+ioRQodAeY
VzpUoT61Ae/gcAr2eFhHXwmoQ6bl8CMimub3Q9O1np7f0X8/f1W+TKJA46v7
dLFbD4o56p9wNpnut2p2P78dvU98JHyVUylYuXLfpPWpPvTBb+/WlHcUSIkq
aJkeYiNpTu8yx/cUaK+ZEC87NICcD17/qZZJwTLKS3HgyCBaJ/fqdUY2BYT7
nFjNqWF09+a2W1dyKUjffgOXnhpB7IEGiy15FIzeiwtyODqKdu09rzOdT8Ed
09m+7p0c9Owdn0xeAQX+1/JMU+W4aHZ5xC+PIgqyAv9V+NPzedJdpQZKKBhT
ljDpusxD2T3FifxlFJhxF2XZ0/vEMv3jt0vKKVB+fMi6j94nLiX/sLxdQUHZ
cb47nyp5qFbSb5v+FwrMLWX6H63jIdWrcitEqigY2WC2/c0CLrrXnj7+pZoC
OQeW8/COUTT4n2Ht/Vo6viPNpb58COkmdCUZ11Ow/L8zl3PvsNFzsSt+El8p
cGGUegt49yC+S2LWDY0UuF40G1Z0a0VmTc+3h32noEDzyaBUcS3K2aYte7SZ
gtj9SjcmBTOQzPPa3zKtFDT/aTkiLpyDLwvZ1rW0UfC2cPFJuz91uP7CvzdP
OigQnduSOBZG+4+G0Dunuihoerss7eNMD76/Wfk00UNBrzrf8fc/2Hg4ugD1
9FKQEH3sheLKYawncHTli34Kso1j46S9R/GLs5w/ZwYo6JMPsxdR52L+ap96
hSEKalDIlKg+D5ury6YMDVOw+3ZkvQXtNz5Gpt1NGqXA4NyKY4m035Cd1T1z
gUvrMZy5DXU8fMW6Hdb/oMAp/rfFedqvfP10adXYGK3Ps2H7NhVwsZqqyOS7
XxQ8TD4dkPaXgwNDYxtcftPzccTQQXMlBxucqvKfnKQg7oyl3wKVEfyy2Nom
5y8FPorzlK2VhrGg0t8dbjMUKLYvvh1BDmHLwGC57bP0vG9XNju0chDn/1oz
NTdH3xeyno6BSwfw/wBprZxj
     "]], LineBox[CompressedData["
1:eJwUV3c8lt8btvd439esJEopCfmKSnmOWRShjEoysrfsBlEpOyMqe29CQuVG
QkL23it77/X+3t9fz+f+POec+7qv+/6cc138RnaaJhRkZGSJ9GRk///GPDei
Of/IX8ZkPjripiPXj9h7c5d1+CywRfq8YdeqtvIeVT9HPj53bPrB9UBc/Wq5
uNTfJIZub2zt8Tkn+Zs04HrtLgs131usdkn3i0AvG3zXGXMjmgVjL6IvhNTj
jwF5UfHyXlcoFjnym+uC+SkQ+L57amc3AkulEzhRFiACStVIb/PYB0wmcHGB
Z+8/MG949W5NPhobZVF7Ja99Cfzb62uWzeKw3BM2WxVaGOgs0D7fVEzA2pzw
J2v25cDcMZN7oysRCxm+900jWQncN24WrlkkY5QOG3XUcSrg57Gourqbgn2T
tHU0X1CDHG8Jn6VjGdii3HmlAqU7UE7TdXTxcybGdFXVimVRG5r93Evm5bMx
qqd36oar7sJKaPn8jFke9o21Xotn4SF4+4tVrz3Nx4w/8akTkgzBr/EFfk3x
M8a7rlVkb2IM0RoC2StdBdhvTB4mz5lBcpjz9nJ8IZYxZnZXW8ICcjpqlJYt
irC751VPNGtYQfldi5HF3S9Yxs02u9hWOxgxzOWcP1aK8Um1KbzecoKZJKLx
3FQpZs9/Rf79PRdYmVD/PPu5DHPgHWDcrHMFKsvVGzPy37HkSu9fPH884JTj
xRf/zACrOhb39WiRF3D3Kpg95q7A5i/dmqeNegE8T+aZV59WYDITynoR3t4g
8EPm/opiJXa9v/DaoNVLkJQdWV/qqsIm2R1vHH33Bi6Pvo22v/ITW53yTWHL
fgsyPuLyS/E/MToru/eoyQ+u/fIJWbSoxp5eUeMJOR0Iusqnzi7s/sLs9d+E
5h55B3ozTS02BjVYaFnGNZHad2Do7+o2X12DFbzYtkxwCQXLxrpfc4G12Bf6
icnQkTB4omFlMHvsN6ZeXFJBN/0eDnwkDw0F/MbWb+/oLdREglcxeWvr9m+M
8Vzh8HpGFLw8EiVf1laPjd5IUP3i+RGCJqpPvfVtwNzrxrwOW8cCjjtk6Ola
A1ZyPprnvHMchKrcj7I3bMSYVGKKqOXiITJvmV5XugmzoCV2FdxNgHh33vlT
i3+xBpZmj5ScJMB3rmkyizRjuz0ipX4qyaBpd0/U91EzNtFvQV00kwwdCSen
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
u22ewaCAcbpw853kBvwfC5dkYg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-1.9999989779911038`, 0.9999939277200448}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.682433413313436*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"eqs1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "/.", 
       RowBox[{"{", "\[Omega]y", "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "8"}], "}"}]}], "]"}], " ", "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.6826510814162703`*^9, 3.6826511001935043`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Iota]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], 
        "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Omega]1", "(", "z", ")"}], "-", 
              RowBox[{"\[Omega]2", "(", "z", ")"}]}], ")"}]}]}], ")"}]}]}], 
       "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[Iota]p", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Mu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
         RowBox[{"\[Omega]2", "(", "z", ")"}]}]}], "\[LongEqual]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g01", "(", "z", ")"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Mu]p", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Nu]p", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{
        RowBox[{
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Nu]p", "(", "z", ")"}], "2"], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Nu]p", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g01", "(", "z", ")"}], " ", 
            RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Omega]1", "(", "z", ")"}]}]}], ")"}]}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"g01", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "+", 
        RowBox[{
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g12", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Nu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[Omega]2", "(", "z", ")"}], "+", 
        RowBox[{
         SuperscriptBox["\[Iota]0", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{"\[Omega]1", "(", "z", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"3", " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"g12", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Nu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["y0", "\[Prime]",
           MultilineFunction->None], "(", "z", ")"}]}]}], "\[LongEqual]", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"g02", "(", "z", ")"}], " ", 
         RowBox[{"\[Iota]p", "(", "z", ")"}], " ", 
         RowBox[{"\[Mu]p", "(", "z", ")"}]}], "+", 
        RowBox[{"\[Omega]1", "(", "z", ")"}], "+", 
        RowBox[{"\[Omega]2", "(", "z", ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]1", "(", "z", ")"}], "+", 
        RowBox[{"\[Omega]2", "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["ey", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Iota]0", "(", "z", ")"}]}]], " ", 
         RowBox[{"\[Mu]m", "(", "z", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"g01", "(", "z", ")"}]}], "+", 
           RowBox[{
            RowBox[{"g02", "(", "z", ")"}], " ", 
            RowBox[{"\[Mu]p", "(", "z", ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Nu]m", "\[Prime]",
          MultilineFunction->None], "(", "z", ")"}]}], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"y0", "(", "z", ")"}]}], "+", 
            RowBox[{"\[Iota]0", "(", "z", ")"}]}], ")"}]}]], " ", 
        RowBox[{"g02", "(", "z", ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Mu]m", "\[Prime]",
         MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"y0", "(", "z", ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
           RowBox[{"\[Iota]0", "(", "z", ")"}]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g12", "(", "z", ")"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"g02", "(", "z", ")"}], " ", 
           RowBox[{"\[Iota]p", "(", "z", ")"}]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.682651056583851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ws", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]y", "[", "z", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"3", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Omega]0", "[", "z", "]"}], "+", 
          RowBox[{"\[Omega]1", "[", "z", "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Omega]i", "[", "z", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"\[Omega]0", "[", "z", "]"}], "-", 
        RowBox[{"\[Omega]1", "[", "z", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Omega]0", "[", "z", "]"}], ",", " ", 
      RowBox[{"\[Omega]1", "[", "z", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682651428175918*^9, 3.68265148008009*^9}, {
  3.682651584210944*^9, 3.682651585230137*^9}, {3.6826516380610027`*^9, 
  3.682651651102591*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]0", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"\[Omega]i", "[", "z", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"\[Omega]1", "[", "z", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"\[Omega]i", "[", "z", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682651474893672*^9, 3.682651497083769*^9}, 
   3.682651586459943*^9, 3.682651651721993*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"sol", "/.", "ws"}], "]"}]], "Input",
 CellChangeTimes->{{3.682651529315864*^9, 3.682651596396904*^9}, {
  3.682651630113853*^9, 3.682651655731779*^9}, {3.682651712888173*^9, 
  3.682651742376026*^9}, {3.682651806559692*^9, 3.6826518066794567`*^9}, {
  3.682651871640574*^9, 3.682651876268611*^9}, {3.68265191956988*^9, 
  3.682651922291317*^9}, {3.682651983544427*^9, 3.682652043138925*^9}, {
  3.682652080044115*^9, 3.6826520974954042`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]p", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"g01", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"\[Iota]p", "[", "z", "]"}], "2"]}], ")"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"g12", "[", "z", "]"}], " ", 
        RowBox[{"\[Nu]p", "[", "z", "]"}]}], "+", 
       RowBox[{
        RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g02", "[", "z", "]"}], " ", 
           RowBox[{"\[Nu]p", "[", "z", "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Omega]i", "[", "z", "]"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Mu]p", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"g12", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"\[Mu]p", "[", "z", "]"}], "2"]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g01", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Iota]p", "[", "z", "]"}]}], " ", 
           RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Nu]p", "[", "z", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Mu]p", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"g02", "[", "z", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
              RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
             RowBox[{"\[Nu]p", "[", "z", "]"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Omega]i", "[", "z", "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Nu]p", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"g12", "[", "z", "]"}]}], "+", 
          RowBox[{
           RowBox[{"g01", "[", "z", "]"}], " ", 
           RowBox[{"\[Nu]p", "[", "z", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"g02", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"\[Nu]p", "[", "z", "]"}], "2"]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"\[Nu]p", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Omega]i", "[", "z", "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]0", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"g01", "[", "z", "]"}], " ", 
        RowBox[{"\[Iota]p", "[", "z", "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"g12", "[", "z", "]"}], " ", 
        RowBox[{"\[Mu]p", "[", "z", "]"}]}], "-", 
       RowBox[{
        RowBox[{"g02", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
           RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Nu]p", "[", "z", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"\[Omega]i", "[", "z", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y0", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"g12", "[", "z", "]"}], " ", 
           RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
          RowBox[{
           RowBox[{"g02", "[", "z", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
              RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
             RowBox[{"\[Nu]p", "[", "z", "]"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ey", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Nu]m", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"y0", "[", "z", "]"}]}], "+", 
            RowBox[{"\[Iota]0", "[", "z", "]"}]}], ")"}]}]], " ", 
        RowBox[{"g02", "[", "z", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Iota]0", "[", "z", "]"}]}]], " ", 
        RowBox[{"\[Mu]m", "[", "z", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g01", "[", "z", "]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"g02", "[", "z", "]"}], " ", 
           RowBox[{"\[Mu]p", "[", "z", "]"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Mu]m", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"y0", "[", "z", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"\[Iota]0", "[", "z", "]"}]}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g12", "[", "z", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "[", "z", "]"}], " ", 
          RowBox[{"\[Iota]p", "[", "z", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Iota]m", "\[Prime]",
        MultilineFunction->None], "[", "z", "]"}], "\[Rule]", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Iota]0", "[", "z", "]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g01", "[", "z", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"g02", "[", "z", "]"}], " ", 
          RowBox[{"\[Mu]p", "[", "z", "]"}]}]}], ")"}]}]}]}], "}"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682651533852293*^9, 3.682651555304079*^9}, {
   3.682651588931637*^9, 3.682651598273842*^9}, {3.6826516326493*^9, 
   3.6826516576625137`*^9}, {3.682651718631966*^9, 3.6826517436624727`*^9}, 
   3.6826518074026403`*^9, {3.6826519202067547`*^9, 3.682651923059369*^9}, {
   3.682651986034811*^9, 3.682652043620076*^9}, {3.682652082587573*^9, 
   3.682652098838674*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["", TraditionalForm]], "Input",
 CellChangeTimes->{3.682652059072031*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"g12", "[", "z", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"\[Mu]p", "[", "z", "]"}], "2"]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"g01", "[", "z", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
       RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"\[Nu]p", "[", "z", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"\[Mu]p", "[", "z", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"g02", "[", "z", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Iota]p", "[", "z", "]"}], " ", 
          RowBox[{"\[Mu]p", "[", "z", "]"}]}], "+", 
         RowBox[{"\[Nu]p", "[", "z", "]"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]i", "[", "z", "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"\[Omega]y", "[", "z", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox["\[Mu]p", "\[Prime]",
     MultilineFunction->None], "[", "z", "]"}]}]}]], "Output",
 CellChangeTimes->{3.682652054952589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"solA", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], " ", "*", 
         "\[ImaginaryI]", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], "]"}]}], "\[Equal]", 
        RowBox[{"-", 
         RowBox[{"y", "[", "x", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"solN", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], " ", "*", 
        "\[ImaginaryI]", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        RowBox[{"y", "[", "x", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.682687370717923*^9, 3.682687376474595*^9}, {
  3.6826874108131332`*^9, 3.682687420851927*^9}, {3.682687456236154*^9, 
  3.682687457760436*^9}, {3.682688017083727*^9, 3.68268809737113*^9}, {
  3.682688152258787*^9, 3.6826883052922077`*^9}, {3.682688369791896*^9, 
  3.682688404741325*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolve", "::", "bvnul"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"For some branches of the general solution, the given \
boundary conditions lead to an empty solution. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/DSolve/bvnul\\\", ButtonNote -> \
\\\"DSolve::bvnul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.682688247259424*^9, 3.682688272272283*^9}, 
   3.682688306255295*^9, {3.682688385134878*^9, 3.682688398768392*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.682688059079784*^9, 3.682688097838625*^9}, {
   3.682688169549467*^9, 3.682688208818364*^9}, {3.682688246806243*^9, 
   3.682688272082795*^9}, 3.682688306289464*^9, {3.6826883851361628`*^9, 
   3.682688398769619*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\)\\)\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.682688247259424*^9, 3.682688272272283*^9}, 
   3.682688306255295*^9, {3.682688385134878*^9, 3.6826883988292913`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(x\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.682688247259424*^9, 3.682688272272283*^9}, 
   3.682688306255295*^9, {3.682688385134878*^9, 3.6826883988634987`*^9}}],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "x"}]], "]"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
      RowBox[{"-", 
       RowBox[{"y", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.682688059079784*^9, 3.682688097838625*^9}, {
   3.682688169549467*^9, 3.682688208818364*^9}, {3.682688246806243*^9, 
   3.682688272082795*^9}, 3.682688306289464*^9, {3.6826883851361628`*^9, 
   3.6826883988653517`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682687999375345*^9, 3.682688000551502*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "solA"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682688080309079*^9, 3.682688139588871*^9}, {
  3.682688211463119*^9, 3.6826882263996677`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
WCoDVY3On5yZoWBvd2TIUCID/QOF55F6
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-3.1409553543135798`, 3.140463195450889}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6826881103974037`*^9, 3.682688140147542*^9}, {
  3.682688196558627*^9, 3.6826882268266697`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exp", "[", "]"}]], "Input",
 CellChangeTimes->{{3.682688377059907*^9, 3.682688377932973*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1026, 756},
WindowMargins->{{Automatic, 168}, {Automatic, 50}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 133, 1, 45, "Subsection"],
Cell[716, 25, 3139, 98, 187, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3892, 128, 125, 1, 45, "Subsection"],
Cell[4020, 131, 976, 26, 187, "Input"],
Cell[4999, 159, 1879, 55, 319, "Input"],
Cell[CellGroupData[{
Cell[6903, 218, 201, 4, 35, "Subsubsection"],
Cell[7107, 224, 3916, 97, 363, "Input"],
Cell[CellGroupData[{
Cell[11048, 325, 2701, 68, 165, "Input"],
Cell[13752, 395, 1272, 23, 32, "Output"],
Cell[15027, 420, 1839, 41, 35, "Output"]
}, Open  ]],
Cell[16881, 464, 2360, 59, 160, "Input"],
Cell[CellGroupData[{
Cell[19266, 527, 379, 6, 55, "Input"],
Cell[19648, 535, 8691, 220, 253, "Output"],
Cell[28342, 757, 8508, 218, 257, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36887, 980, 436, 12, 32, "Input"],
Cell[37326, 994, 8038, 212, 216, "Output"]
}, Open  ]],
Cell[45379, 1209, 1183, 29, 55, "Input"],
Cell[CellGroupData[{
Cell[46587, 1242, 1082, 27, 77, "Input"],
Cell[47672, 1271, 85583, 1685, 545, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133292, 2961, 585, 15, 32, "Input"],
Cell[133880, 2978, 84353, 1393, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218270, 4376, 528, 16, 70, "Input"],
Cell[218801, 4394, 436, 14, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219274, 4413, 438, 13, 32, "Input"],
Cell[219715, 4428, 83910, 1387, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303662, 5820, 455, 13, 32, "Input"],
Cell[304120, 5835, 7292, 199, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311449, 6039, 919, 25, 32, "Input"],
Cell[312371, 6066, 879, 27, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313287, 6098, 498, 8, 32, "Input"],
Cell[313788, 6108, 7866, 210, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321691, 6323, 96, 2, 32, "Input"],
Cell[321790, 6327, 1398, 42, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323225, 6374, 1714, 47, 55, "Input"],
Cell[324942, 6423, 577, 11, 23, "Message"],
Cell[325522, 6436, 285, 5, 32, "Output"],
Cell[325810, 6443, 618, 12, 50, "Message"],
Cell[326431, 6457, 602, 11, 23, "Message"],
Cell[327036, 6470, 901, 23, 38, "Output"]
}, Open  ]],
Cell[327952, 6496, 92, 1, 32, InheritFromParent],
Cell[CellGroupData[{
Cell[328069, 6501, 467, 13, 32, "Input"],
Cell[328539, 6516, 4018, 76, 230, "Output"]
}, Open  ]],
Cell[332572, 6595, 117, 2, 32, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
